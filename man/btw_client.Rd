% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/btw_client.R
\name{btw_client}
\alias{btw_client}
\alias{btw_app}
\title{Create a btw-enhanced ellmer chat client}
\usage{
btw_client(..., client = NULL, tools = NULL, path_btw = NULL)

btw_app(..., client = NULL, tools = NULL, path_btw = NULL)
}
\arguments{
\item{...}{Additional arguments are ignored. \code{...} are included for future
feature expansion.}

\item{client}{An \link[ellmer:Chat]{ellmer::Chat} client, defaults to
\code{\link[ellmer:chat_anthropic]{ellmer::chat_anthropic()}}. You can use the \code{btw.client} option to set a
default client for new \code{btw_client()} calls, or use a \code{btw.md} project file
for default chat client settings, like provider and model. We check the
\code{client} argument, then the \code{btw.client} R option, and finally the \code{btw.md}
project file, using only the client definition from the first of these that
is available.}

\item{tools}{Optional names of tools or tool groups to include in the chat
client. By default, all btw tools are included. For example, use
\code{include = "docs"} to include only the documentation related tools, or
\code{include = c("env", "docs")}, etc. \code{btw_client()} also supports
\code{tools = FALSE} to skip registering \pkg{btw} tools with the chat client.}

\item{path_btw}{A path to a \code{btw.md} project context file. If \code{NULL}, btw
will find a project-specific \code{btw.md} file in the parents of the current
working directory.}
}
\value{
Returns an \link[ellmer:Chat]{ellmer::Chat} object with additional tools registered
from \code{\link[=btw_tools]{btw_tools()}}. \code{btw_app()} returns the chat object invisibly, and
the chat object with the messages added during the chat session.
}
\description{
Creates an \link[ellmer:Chat]{ellmer::Chat} client, enhanced with the tools from
\code{\link[=btw_tools]{btw_tools()}}. Use \code{btw_client()} to create the chat client for
general or interactive use at the console, or \code{btw_app()} to create a chat
client and launch a Shiny app for chatting with a btw-enhanced LLM in your
local workspace.
\subsection{Project Context}{

You can keep track of project-specific rules, guidance and context by adding
a \code{btw.md} file in your project directory. Any time you start a chat client
with \code{btw_client()} or launch a chat session with \code{btw_app()}, btw will
automatically find and include the contents of the \code{btw.md} file in your
chat.

Use \code{btw.md} to inform the LLM of your preferred code style, to provide
domain-specific terminology or definitions, to establish project
documentation, goals and constraints, to include reference materials such or
technical specifications, or more. Storing this kind of information in
\code{btw.md} may help you avoid repeating yourself and can be used to maintain
coherence across many chat sessions.

The \code{btw.md} file, when present, is included as part of the system prompt for
your chat conversation. You can structure the file in any way you wish.

You can also use the \code{btw.md} file to choose default chat settings for your
project in a YAML block at the top of the file. In this YAML block you can
choose the default \code{provider}, \code{model} and \code{tools} for \code{btw_client()} or
\code{btw_app()}. \code{provider} chooses the \verb{ellmer::chat_*()} function, e.g.
\code{provider: openai} or \code{provider: chat_openai} to use \code{\link[ellmer:chat_openai]{ellmer::chat_openai()}}.
\code{tools} chooses which btw tools are included in the chat, and all other
values are passed to the \verb{ellmer::chat_*()} constructor, e.g. \verb{model: gpt-4o}, \code{seed: 42}, or `echo: all``.

Here's an example \code{btw.md} file:

\if{html}{\out{<div class="sourceCode">}}\preformatted{---
provider: claude
model: claude-3-7-sonnet-20250219
tools: [data, docs, environment]
---

Follow these important style rules for any R code in this project:

* Prefer solutions that use \{tidyverse\}
* Always use `<-` for assignment
* Always use the native base-R pipe `|>` for piped expressions

}\if{html}{\out{</div>}}
}

\subsection{Client Options}{
\itemize{
\item \code{btw.client}: The \link[ellmer:Chat]{ellmer::Chat} client to use as the basis for new
\code{btw_client()} or \code{btw_app()} chats.
\item \code{btw.tools}: The btw tools to include by default when starting a new
btw chat, see \code{\link[=btw_tools]{btw_tools()}} for details.
}
}
}
\section{Functions}{
\itemize{
\item \code{btw_client()}: Create a btw-enhanced \link[ellmer:Chat]{ellmer::Chat} client

\item \code{btw_app()}: Create a btw-enhanced client and launch a Shiny app to
chat

}}
\examples{
if (interactive()) {
  withr::local_options(list(
    btw.client = ellmer::chat_ollama(model="llama3.1:8b")
  ))

  chat <- btw_client()
  chat$chat("How can I replace `stop()` calls with functions from the cli package?")
}

}
