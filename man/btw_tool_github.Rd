% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tool-github.R
\name{btw_tool_github}
\alias{btw_tool_github}
\title{Tool: GitHub}
\usage{
btw_tool_github(code, `_intent` = "")
}
\arguments{
\item{code}{R code that calls \code{gh()} or \code{gh_whoami()}. The code will be
evaluated in an environment where \code{owner} and \code{repo} variables are
predefined (defaulting to the current repository if detected). The \code{gh()}
function is available without needing to load the gh package.}

\item{_intent}{An optional string describing the intent of the tool use.
When the tool is used by an LLM, the model will use this argument to
explain why it called the tool.}
}
\value{
A \code{btw_tool_result} containing the result of the GitHub API call.
}
\description{
Execute R code that calls the GitHub API using \code{gh()} function from the gh
package.
}
\details{
\subsection{Endpoint Validation}{

This tool uses endpoint validation to ensure only safe GitHub API operations
are performed. By default, most read operations and low-risk write operations
(like creating issues or PRs) are allowed, while dangerous operations (like
merging PRs or deleting repositories) are blocked.

To customize which endpoints are allowed or blocked, use the
\code{btw.github_endpoint.allow} and \code{btw.github_endpoint.block} options:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# Allow a specific endpoint
options(btw.github_endpoint.allow = c(
  getOption("btw.github_endpoint.allow"),
  "GET /repos/*/*/topics"
))

# Block a specific endpoint
options(btw.github_endpoint.block = c(
  getOption("btw.github_endpoint.block"),
  "GET /repos/*/*/branches"
))
}\if{html}{\out{</div>}}

The precedence order for rules is:
\enumerate{
\item User block rules (checked first, highest priority)
\item User allow rules
\item Built-in block rules
\item Built-in allow rules
\item Default: reject (if no rules match)
}
}
}
\examples{
\dontrun{
# Get an issue
btw_tool_github(code = 'gh("/repos/{owner}/{repo}/issues/123")')

# List open issues
btw_tool_github(code = 'gh("/repos/{owner}/{repo}/issues", state = "open")')

# Create an issue
btw_tool_github(code = '
  gh("POST /repos/{owner}/{repo}/issues",
     title = "Bug report",
     body = "Description of bug")
')

# Target a different repository
btw_tool_github(code = '
  owner <- "tidyverse"
  repo <- "dplyr"
  gh("/repos/{owner}/{repo}/issues/1")
')
}

}
\concept{github tools}
