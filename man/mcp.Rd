% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcp.R
\name{mcp}
\alias{mcp}
\alias{btw_mcp_server}
\alias{btw_mcp_session}
\title{Start a Model Context Protocol server with btw tools}
\usage{
btw_mcp_server(tools = NULL, ...)

btw_mcp_session()
}
\arguments{
\item{tools}{Optional names of tools or tool groups to include when
registering tools. By default all btw tools are included. For example, use
\code{tools = "docs"} to include only the documentation related tools, or
\code{tools = c("env", "docs", "session")}, etc.}

\item{...}{Named ellmer tools from \link[ellmer:tool]{ellmer::tool} to include in addition to
those specified in \code{tools}.}
}
\description{
\code{btw_mcp_server()} starts an MCP server with tools from \code{\link[=btw_tools]{btw_tools()}}, which
can provide MCP clients like Claude Desktop or Claude Code with additional
context. The function will block the R process it's called in and isn't
intended for interactive use.

To give the MCP server access to a specific R session, run \code{btw_mcp_session()}
in that session. If there are no sessions configured, the server will run
the tools in its own session, meaning that e.g. the
\code{btw_tools(tools = "env")} tools will describe R objects in \emph{that} R
environment.
}
\section{Configuration}{

To configure this server with MCP clients, use the command \code{Rscript} and the
args \verb{-e "btw::btw_mcp_server()"}. For example, in Claude Desktop's
configuration format:

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "mcpServers": \{
    "r-acquaint": \{
      "command": "Rscript",
      "args": ["-e", "btw::btw_mcp_server()"]
    \}
  \}
\}
}\if{html}{\out{</div>}}

Or, with Claude Code:

\if{html}{\out{<div class="sourceCode bash">}}\preformatted{claude mcp add -s "user" r-acquaint -- Rscript -e "btw::btw_mcp_server()"
}\if{html}{\out{</div>}}
}

\examples{
# Should only be run non-interactively, and 
# will block the current R process once called.
if (FALSE) {
  # To start a server with btw tools:
  btw_mcp_server()
 
  # To only do so with a subset of btw's tools, e.g. those 
  # that fetch package documentation:
  btw_mcp_server(tools = "docs")
}

# To allow the server to access variables in specific 
# sessions, call `btw_mcp_session()` in that session:
btw_mcp_session()

}
\seealso{
These functions use \code{\link[acquaint:mcp]{acquaint::mcp_server()}} and \code{\link[acquaint:mcp]{acquaint::mcp_session()}}
under the hood. To configure arbitrary tools with an MCP client, see the
documentation of those functions.
}
