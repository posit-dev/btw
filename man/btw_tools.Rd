% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tools.R
\name{btw_tools}
\alias{btw_tools}
\title{Tools: Register tools from btw}
\usage{
btw_tools(tools = NULL)
}
\arguments{
\item{tools}{Optional names of tools or tool groups to include when
registering tools. By default all btw tools are included. For example, use
\code{tools = "docs"} to include only the documentation related tools, or
\code{tools = c("env", "docs", "session")}, etc.}
}
\value{
Registers the tools with \code{chat}, updating the \code{chat} object in
place. The \code{chat} input is returned invisibly.
}
\description{
The \code{btw_tools()} function provides a list of tools that can be registered
with an ellmer chat via \code{chat$set_tools()} that allow the chat to
interface with your computational environment. Chats returned by
this function have access to the tools:\tabular{lll}{
   Name \tab Group \tab Description \cr
   btw_tool_docs_available_vignettes \tab docs \tab List available vignettes for an R package. \cr
   btw_tool_docs_help_page \tab docs \tab Get help page from package. \cr
   btw_tool_docs_package_help_topics \tab docs \tab Get available help topics for an R package. \cr
   btw_tool_docs_package_news \tab docs \tab Read the release notes (NEWS) for a package. \cr
}


Use this tool when you need to learn what changed in a package release, i.e. |
| btw_tool_docs_vignette | docs | Get a package vignette in plain text. |
| btw_tool_env_describe_data_frame | env | Show the data frame or table or get information about the structure of a data frame or table. |
| btw_tool_env_describe_environment | env | List and describe items in an environment. |
| btw_tool_files_list_files | files | List files in the current working directory or in subfolders in the current project directory. |
| btw_tool_files_read_text_file | files | Read an entire text file. |
| btw_tool_ide_read_current_editor | ide | Read the contents of the editor that is currently open in the user's IDE. |
| btw_tool_memory_project_context_add | memory | Store or append information about the project.

Use this when the user provides new information that won't change during the project lifecycle about:
\itemize{
\item \strong{problem_description}: The main business problem or research question (replaces existing)
\item \strong{objectives}: Specific analysis goals or questions to answer (appends to list)
\item \strong{constraints}: Limitations, requirements, or restrictions (appends to list)
\item \strong{business_context}: Domain knowledge, organizational background (appends to list)
}

\strong{When to use:} User mentions project goals, business requirements, analysis objectives, domain constraints, or background context that should be remembered across sessions.

\strong{Examples:}
\itemize{
\item User says "I need to predict customer churn" -> store in \code{problem_description} as "Identify customers at risk of churning"
\item User explains "We need three risk levels" -> add to \code{objectives} as "Segment customers into low, medium, high risk"
\item User states "We can't use personal data" -> add to \code{constraints} as "No personal data allowed in analysis"
\item User provides background on company goals -> add to \code{business_context} as "Recent product changes have affected customer retention". |
| btw_tool_memory_project_context_read | memory | Read project memory.
}

Retrieves stored project context to understand the analysis requirements and provide contextually appropriate responses.

\strong{When to use:}
\itemize{
\item At the start of conversations to understand the project scope
\item When making analysis recommendations to align with stated objectives
\item When the user asks about project goals or requirements
\item Before suggesting approaches to ensure they fit within constraints
\item When you need to recall business context to interpret results appropriately
}

\strong{Key scenarios:}
\itemize{
\item User asks "What are we trying to accomplish?" -> read \code{objectives}
\item User wants analysis suggestions -> read constraints and \code{success_criteria}
\item User asks about project background -> read \code{business_context}
\item You need full context for recommendations -> read without specifying key
}

\strong{Best practice:} Check project context early in conversations to provide more relevant and targeted assistance. |
| btw_tool_memory_project_context_replace | memory | Replace or correct existing project memory.

\strong{When to use:}
\itemize{
\item User corrects previously stated objectives or requirements
\item Project scope changes significantly
\item User provides more accurate problem description
\item Need to reorganize or consolidate scattered information
\item User explicitly asks to "update" or "change" stored project information
}

\strong{Key scenarios:}
\itemize{
\item "Actually, the goal is prediction, not classification" -> replace objectives
\item "I was wrong about the constraints" -> replace constraints
\item User provides detailed problem statement to replace vague initial description
\item Consolidating multiple business_context entries into organized list
}

\strong{Caution:} Use sparingly - prefer \code{add} for new information. |
| btw_tool_search_package_info | search | Describe a CRAN package. |
| btw_tool_search_packages | search | Search for an R package on CRAN.
\subsection{Search Behavior}{
\itemize{
\item Prioritizes exact phrase matches over individual words
\item Falls back to word matching only when phrase matching fails
}
}

\subsection{Query Strategy}{
\itemize{
\item Submit separate searches for distinct concepts (e.g., \code{flights}, \code{airlines})
\item Break multi-concept queries (e.g., \verb{flights airlines data API}) into multiple searches and synthesize results
\item Search for single, specific technical terms that package authors would use
\item If the search result includes more than a 1000 results, refine your query and try again.
}
}

\subsection{Examples}{

Good: Search for \code{"permutation test"} or just \code{"permutation"}
Bad: Search for \code{"statistical analysis tools for permutation test"}
. |
| btw_tool_session_check_package_installed | session | Check if a package is installed in the current session. |
| btw_tool_session_package_info | session | Verify that a specific package is installed, or find out which packages are in use in the current session. |
| btw_tool_session_platform_info | session | Describes the R version, operating system, language and locale settings for the user's system. |
}
}
\examples{
# requires an ANTHROPIC_API_KEY
\dontrun{
ch <- ellmer::chat_anthropic()

# register all of the available tools
ch$set_tools(btw_tools())

# or register only the tools related to fetching documentation
ch$set_tools(btw_tools(tools = "docs"))

# ensure that the current tools persist
ch$set_tools(c(ch$get_tools(), btw_tools()))
}

}
\seealso{
Other Tools: 
\code{\link{btw_tool_docs_package_news}()},
\code{\link{btw_tool_env_describe_data_frame}()},
\code{\link{btw_tool_env_describe_environment}()},
\code{\link{btw_tool_files_list_files}()},
\code{\link{btw_tool_files_read_text_file}()},
\code{\link{btw_tool_ide_read_current_editor}()},
\code{\link{btw_tool_package_docs}},
\code{\link{btw_tool_search_packages}()},
\code{\link{btw_tool_session_package_info}()},
\code{\link{btw_tool_session_platform_info}()}
}
\concept{Tools}
