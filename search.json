[{"path":[]},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://posit-dev.github.io/btw/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to btw","title":"Contributing to btw","text":"outlines propose change btw. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to btw","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to btw","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to btw","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"posit-dev/btw\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to btw","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://posit-dev.github.io/btw/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to btw","text":"Please note btw project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://posit-dev.github.io/btw/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://posit-dev.github.io/btw/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with btw","title":"Getting help with btw","text":"Thanks using btw! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://posit-dev.github.io/btw/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with btw","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://posit-dev.github.io/btw/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with btw","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://posit-dev.github.io/btw/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with btw","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://posit-dev.github.io/btw/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrick Aden-Buie. Author, maintainer. Simon Couch. Author. Joe Cheng. Author. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/btw/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aden-Buie G, Couch S, Cheng J (2025). btw: Describe R Stuff Large Language Models. R package version 0.0.0.9001, https://posit-dev.github.io/btw/, https://github.com/posit-dev/btw.","code":"@Manual{,   title = {btw: Describe R Stuff to Large Language Models},   author = {Garrick Aden-Buie and Simon Couch and Joe Cheng},   year = {2025},   note = {R package version 0.0.0.9001, https://posit-dev.github.io/btw/},   url = {https://github.com/posit-dev/btw}, }"},{"path":"https://posit-dev.github.io/btw/index.html","id":"btw","dir":"","previous_headings":"","what":"Describe R Stuff to Large Language Models","title":"Describe R Stuff to Large Language Models","text":"btw helps describe computational environment LLMs. used interactively, btw() assembles context R environment, package documentation, working directory, copying results clipboard easy pasting chat interfaces. btw() function wraps methods can easily incorporated ellmer tool calls describing various kinds objects R. equip ellmer chat ability peruse documentation, check objects R environment, explore working directory, pass chat btw_register_tools().","code":""},{"path":"https://posit-dev.github.io/btw/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Describe R Stuff to Large Language Models","text":"can install development version btw like :","code":"pak::pak(\"posit-dev/btw\")"},{"path":"https://posit-dev.github.io/btw/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Describe R Stuff to Large Language Models","text":"","code":"library(btw)"},{"path":"https://posit-dev.github.io/btw/index.html","id":"interactive-use","dir":"","previous_headings":"Example","what":"Interactive use","title":"Describe R Stuff to Large Language Models","text":"btw() function allows compile information sorts R stuff copy clipboard. Pass R object btw(), like btw(mtcars), btw(dplyr::across) btw(globalenv()). btw(\"{dplyr}\") describe dplyr package via function reference (available) introductory vignette. btw(\"?dplyr::across\") btw(?dplyr::across) includes help pages dplyr::across(). btw(\"./path\") read lines file path (list files path ’s directory). btw(\"@current_file\") btw(\"@current_selection\") reads contents current editor selection RStudio, Positron, anywhere rstudioapi supported. btw(\"@platform_info\") describes R version, operating system, locale information. btw() \"@attached_packages\", \"@loaded_packages\", \"@installed_packages\" includes listing attached (.e. library()), loaded (use session, often indirectly), installed packages. ! See ?btw_this.character full list additional context strings. passed multiple arguments, btw() concatenate description. example, run: following attached clipboard: can also just call btw() inputs, describe objects global environment.","code":"btw(mtcars, \"{btw}\", ?btw::btw) ✔ btw copied to the clipboard! ## Context  mtcars ```json {\"n_cols\":11,\"n_rows\":32,\"groups\":[],\"class\":\"data.frame\",\"columns\":{\"mpg\":{\"variable\":\"mpg\",\"type\":\"numeric\",\"mean\":20.0906,\"sd\":6.0269,\"p0\":10.4,\"p25\":15.425,\"p50\":19.2,\"p75\":22.8,\"p100\":33.9},\"cyl\":{\"variable\":\"cyl\",\"type\":\"numeric\",\"mean\":6.1875,\"sd\":1.7859,\"p0\":4,\"p25\":4,\"p50\":6,\"p75\":8,\"p100\":8},\"disp\":{\"variable\":\"disp\",\"type\":\"numeric\",\"mean\":230.7219,\"sd\":123.9387,\"p0\":71.1,\"p25\":120.825,\"p50\":196.3,\"p75\":326,\"p100\":472},\"hp\":{\"variable\":\"hp\",\"type\":\"numeric\",\"mean\":146.6875,\"sd\":68.5629,\"p0\":52,\"p25\":96.5,\"p50\":123,\"p75\":180,\"p100\":335},\"drat\":{\"variable\":\"drat\",\"type\":\"numeric\",\"mean\":3.5966,\"sd\":0.5347,\"p0\":2.76,\"p25\":3.08,\"p50\":3.695,\"p75\":3.92,\"p100\":4.93},\"wt\":{\"variable\":\"wt\",\"type\":\"numeric\",\"mean\":3.2172,\"sd\":0.9785,\"p0\":1.513,\"p25\":2.5812,\"p50\":3.325,\"p75\":3.61,\"p100\":5.424},\"qsec\":{\"variable\":\"qsec\",\"type\":\"numeric\",\"mean\":17.8487,\"sd\":1.7869,\"p0\":14.5,\"p25\":16.8925,\"p50\":17.71,\"p75\":18.9,\"p100\":22.9},\"vs\":{\"variable\":\"vs\",\"type\":\"numeric\",\"mean\":0.4375,\"sd\":0.504,\"p0\":0,\"p25\":0,\"p50\":0,\"p75\":1,\"p100\":1},\"am\":{\"variable\":\"am\",\"type\":\"numeric\",\"mean\":0.4062,\"sd\":0.499,\"p0\":0,\"p25\":0,\"p50\":0,\"p75\":1,\"p100\":1},\"gear\":{\"variable\":\"gear\",\"type\":\"numeric\",\"mean\":3.6875,\"sd\":0.7378,\"p0\":3,\"p25\":3,\"p50\":4,\"p75\":4,\"p100\":5},\"carb\":{\"variable\":\"carb\",\"type\":\"numeric\",\"mean\":2.8125,\"sd\":1.6152,\"p0\":1,\"p25\":2,\"p50\":2,\"p75\":4,\"p100\":8}}} ```  \"{btw}\" ```json [   {\"topic_id\":\"btw\",\"title\":\"Plain-text descriptions of R objects\",\"aliases\":[\"btw\"]},   {\"topic_id\":\"btw-package\",\"title\":\"btw: Describe R Stuff to Large Language Models\",\"aliases\":[\"btw-package\"]},   {\"topic_id\":\"btw_client\",\"title\":\"Create a btw-enhanced ellmer chat client\",\"aliases\":[\"btw_client\",\"btw_app\"]},   {\"topic_id\":\"btw_register_tools\",\"title\":\"Tools: Register tools from btw\",\"aliases\":[\"btw_register_tools\"]},   {\"topic_id\":\"btw_this\",\"title\":\"Describe something for use by an LLM\",\"aliases\":[\"btw_this\"]},   {\"topic_id\":\"btw_this.character\",\"title\":\"Describe objects\",\"aliases\":[\"btw_this.character\"]},   {\"topic_id\":\"btw_this.data.frame\",\"title\":\"Describe a data frame in plain text\",\"aliases\":[\"btw_this.data.frame\",\"btw_this.tbl\"]},   {\"topic_id\":\"btw_this.environment\",\"title\":\"Describe the contents of an environment\",\"aliases\":[\"btw_this.environment\"]},   {\"topic_id\":\"btw_tool_describe_data_frame\",\"title\":\"Tool: Describe data frame\",\"aliases\":[\"btw_tool_describe_data_frame\"]},   {\"topic_id\":\"btw_tool_describe_environment\",\"title\":\"Tool: Describe an environment\",\"aliases\":[\"btw_tool_describe_environment\"]},   {\"topic_id\":\"btw_tool_list_files\",\"title\":\"Tool: List files\",\"aliases\":[\"btw_tool_list_files\"]},   {\"topic_id\":\"btw_tool_package_docs\",\"title\":\"Tool: Describe R package documentation\",\"aliases\":[\"btw_tool_package_docs\",\"btw_tool_get_package_help_topics\",\"btw_tool_get_help_page\",\"btw_tool_get_available_vignettes_in_package\",\"btw_tool_get_vignette_from_package\"]},   {\"topic_id\":\"btw_tool_read_current_editor\",\"title\":\"Tool: Read current file\",\"aliases\":[\"btw_tool_read_current_editor\"]},   {\"topic_id\":\"btw_tool_read_text_file\",\"title\":\"Tool: Read a file\",\"aliases\":[\"btw_tool_read_text_file\"]},   {\"topic_id\":\"btw_tool_session_package_info\",\"title\":\"Tool: Gather information about a package or currently loaded packages\",\"aliases\":[\"btw_tool_session_package_info\"]},   {\"topic_id\":\"btw_tool_session_platform_info\",\"title\":\"Tool: Describe user's platform\",\"aliases\":[\"btw_tool_session_platform_info\"]} ] ```  `?`(btw::btw) btw                    package:btw                     R Documentation  Plain-text descriptions of R objects  Description:       This function allows you to quickly describe your computational      environment to a model by concatenating plain-text descriptions of      \"R stuff\", from data frames to packages to function documentation.       There are two key ways to use 'btw()':         1. Use it interactively at the console to gather information           about your environment into prompt text that you can paste           into the chat interface of an LLM, like ChatGPT or Claude. By           default, 'btw()' copies the prompt to the clipboard for you.            btw(vignette(\"colwise\", \"dplyr\"), dplyr::across, dplyr::starwars)           #> ✔ btw copied to the clipboard!                   2. Pair 'btw()' with ellmer::Chat during a chat session to           create a prompt that includes additional context drawn from           your environment and help pages.            library(ellmer)                      chat <- chat_claude() # requires an Anthropic API key           chat <- chat_ollama(model = \"llama3.1:8b\") # requires ollama and a local model                      chat$chat(btw(             vignette(\"colwise\", \"dplyr\"),             dplyr::across,             dplyr::starwars,             \"Create a few interesting examples that use `dplyr::across()`\",             \"with the `starwars` data set.\"           ))            Usage:       btw(..., clipboard = TRUE)       Arguments:       ...: Objects to describe from your R environment. You can pass           objects themselves, like data frames or functions, or the           function also accepts output from btw_tool_*() functions like           'btw_tool_get_package_help_topics()',           'btw_tool_get_help_page()', etc. If omitted, this function           will just describe the elements in your global R environment.  clipboard: Whether to write the results to the clipboard. A single           logical value; will default to 'TRUE' when run interactively.  Value:       Returns an ellmer::ContentText object with the collected prompt.      If 'clipboard = TRUE', the prompt text is copied to the clipboard      when the returned object is printed for the first time (e.g.      calling 'btw()' without assignment).  Examples:       btw()            btw(mtcars)            btw(btw::btw)            if (FALSE) {        # btw() can also be used directly in {ellmer} chats        library(ellmer)              chat <- chat_ollama(model = \"llama3.1:8b\")        chat$chat(          btw(mtcars, \"Are there cars with 8 cylinders in this dataset?\")        )      }"},{"path":"https://posit-dev.github.io/btw/index.html","id":"supercharging-assistants","dir":"","previous_headings":"Example","what":"Supercharging assistants","title":"Describe R Stuff to Large Language Models","text":"btw_client() equips LLM chats capabilities: peruse documentation, check objects R environment, explore working directory. can also provide btw_client() objects documentation include context chat: btw_client() uses ellmer::chat_claude() default, can customize chat client used one two ways: Set btw.chat_client option (possibly .Rprofile usethis::edit_r_profile()), Provide chat object via client argument. Alternatively, can call btw_app() jump straight Shiny chat app. fully customized chat clients, can use btw_register_tools() add btw tools existing chat interface. individual tools registered btw_register_tools() exported, can selected via tools argument btw_register_tools() (also available btw_client() btw_app()).","code":"ch <- btw_client()  ch$chat(\"Hey!\") Hello! I'm here to help you work with R-related information and data. I can help you:  1. Look up information about installed R packages 2. Get help documentation for specific R packages and functions 3. Examine and manipulate data frames 4. Check what's available in the current environment  What would you like to know about? Feel free to ask a specific question, and I'll use the available tools to help you find the information you need. ch <- btw_client(mtcars) ch$chat(\"Write base R code to summarize average mpg of cars with 4-6 cylinders.\") I'll help you write base R code to calculate the average MPG for cars with 4-6 cylinders using the mtcars dataset.  Here's the code:  ```R mean(mtcars$mpg[mtcars$cyl >= 4 & mtcars$cyl <= 6]) ```  Alternatively, you could also write it with `subset()` from base R:  ```R mean(subset(mtcars, cyl >= 4 & cyl <= 6)$mpg) ```  Both approaches will give you the average MPG for cars with 4-6 cylinders. Given the data shown in the context, this will include cars with 4 and 6 cylinders (as the `cyl` column only contains values 4, 6, and 8). options(btw.chat_client = ellmer::chat_ollama(model = \"llama3.1:8b\")) ch <- btw_client()  # same as above ch <- btw_client(client = ellmer::chat_ollama(model = \"llama3.1:8b\"))"},{"path":"https://posit-dev.github.io/btw/reference/btw-package.html","id":null,"dir":"Reference","previous_headings":"","what":"btw: Describe R Stuff to Large Language Models — btw-package","title":"btw: Describe R Stuff to Large Language Models — btw-package","text":"Provides number utilities describing R objects package documentation plain text. interactive use, especially powerful describing relevant pieces context large language models. used programmatically, utilities can registered 'ellmer' chats tool calls, enabling language models peruse package documentation explore computational environment.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"btw: Describe R Stuff to Large Language Models — btw-package","text":"Maintainer: Garrick Aden-Buie garrick@adenbuie.com (ORCID) Authors: Simon Couch simon.couch@posit.co (ORCID) Joe Cheng joe@posit.co contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw.html","id":null,"dir":"Reference","previous_headings":"","what":"Plain-text descriptions of R objects — btw","title":"Plain-text descriptions of R objects — btw","text":"function allows quickly describe computational environment model concatenating plain-text descriptions \"R stuff\", data frames packages function documentation. two key ways use btw(): Use interactively console gather information environment prompt text can paste chat interface LLM, like ChatGPT Claude. default, btw() copies prompt clipboard .   Pair btw() ellmer::Chat chat session create prompt includes additional context drawn environment help pages.","code":"btw(vignette(\"colwise\", \"dplyr\"), dplyr::across, dplyr::starwars) #> ✔ btw copied to the clipboard! library(ellmer)  chat <- chat_claude() # requires an Anthropic API key chat <- chat_ollama(model = \"llama3.1:8b\") # requires ollama and a local model  chat$chat(btw(   vignette(\"colwise\", \"dplyr\"),   dplyr::across,   dplyr::starwars,   \"Create a few interesting examples that use `dplyr::across()`\",   \"with the `starwars` data set.\" ))"},{"path":"https://posit-dev.github.io/btw/reference/btw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plain-text descriptions of R objects — btw","text":"","code":"btw(..., clipboard = TRUE)"},{"path":"https://posit-dev.github.io/btw/reference/btw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plain-text descriptions of R objects — btw","text":"... Objects describe R environment. can pass objects , like data frames functions, function also accepts output btw_tool_*() functions like btw_tool_get_package_help_topics(), btw_tool_get_help_page(), etc. omitted, function just describe elements global R environment. clipboard Whether write results clipboard. single logical value; default TRUE run interactively.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plain-text descriptions of R objects — btw","text":"Returns ellmer::ContentText object collected prompt. clipboard = TRUE, prompt text copied clipboard returned object printed first time (e.g. calling btw() without assignment).","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plain-text descriptions of R objects — btw","text":"","code":"btw() #> ! Nothing to include in the btw() context.  btw(mtcars)  btw(btw::btw)  if (FALSE) {   # btw() can also be used directly in {ellmer} chats   library(ellmer)    chat <- chat_ollama(model = \"llama3.1:8b\")   chat$chat(     btw(mtcars, \"Are there cars with 8 cylinders in this dataset?\")   ) }"},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a btw-enhanced ellmer chat client — btw_client","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"Creates ellmer::Chat client, enhanced tools btw_register_tools(). Use btw_chat() create chat client general interactive use console, btw_app() create chat client launch Shiny app chatting btw-enhanced LLM local workspace.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"project-context","dir":"Reference","previous_headings":"","what":"Project Context","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"can keep track project-specific rules, guidance context adding btw.md file project directory. time start chat client btw_client() launch chat session btw_app(), btw automatically find include contents btw.md file chat. Use btw.md inform LLM preferred code style, provide domain-specific terminology definitions, establish project documentation, goals constraints, include reference materials technical specifications, . Storing kind information btw.md may help avoid repeating can used maintain coherence across many chat sessions. btw.md file, present, included part system prompt chat conversation. can structure file way wish. can also use btw.md file choose default chat settings project YAML block top file. YAML block can choose default provider, model tools btw_client() btw_app(). provider chooses ellmer::chat_*() function, e.g. provider: openai provider: chat_openai use ellmer::chat_openai(). tools chooses btw tools included chat, values passed ellmer::chat_*() constructor, e.g. model: gpt-4o, seed: 42, `echo: “. example btw.md file:","code":"--- provider: claude model: claude-3-7-sonnet-20250219 tools: [data, docs, environment] ---  Follow these important style rules for any R code in this project:  * Prefer solutions that use {tidyverse} * Always use `<-` for assignment * Always use the native base-R pipe `|>` for piped expressions"},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"client-options","dir":"Reference","previous_headings":"","what":"Client Options","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"btw.chat_client: ellmer::Chat client use basis new btw_client() btw_app() chats. btw.chat_include: btw tools include default starting new btw chat, see btw_register_tools() details.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"","code":"btw_client(..., client = NULL, tools = NULL, path_btw = NULL)  btw_app(..., client = NULL, tools = NULL, path_btw = NULL)"},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"... Objects documentation included context chat, via btw(). client ellmer::Chat client, defaults ellmer::chat_claude(). can use btw.chat_client option set default client new btw_client() calls, use btw.md project file default chat client settings, like provider model. check client argument, btw.chat_client R option, finally btw.md project file, using client definition first available. tools Names tools tool groups include registering tools, e.g. include = \"docs\" include documentation related tools, include = c(\"data\", \"docs\", \"environment\"), etc. Equivalent include argument btw_register_tools(). Use tools = FALSE skip registering btw tools chat client. path_btw path btw.md project context file. NULL, btw find project-specific btw.md file parents current working directory.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"Returns ellmer::Chat object additional tools registered btw_register_tools(). btw_app() returns chat object invisibly, chat object messages added chat session.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"btw_client(): Create btw-enhanced ellmer::Chat client btw_app(): Create btw-enhanced client launch Shiny app chat","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a btw-enhanced ellmer chat client — btw_client","text":"","code":"if (interactive()) {   withr::local_options(list(     btw.chat_client = ellmer::chat_ollama(model=\"llama3.1:8b\")   ))    btw_chat <- btw_client()   chat$chat(\"How can I replace `stop()` calls with functions from the cli package?\") }"},{"path":"https://posit-dev.github.io/btw/reference/btw_register_tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Tools: Register tools from btw — btw_register_tools","title":"Tools: Register tools from btw — btw_register_tools","text":"btw_register_tools() function equips ellmer chat interface computational environment. Chats returned function access tools:","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_register_tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tools: Register tools from btw — btw_register_tools","text":"","code":"btw_register_tools(chat, tools = NULL)"},{"path":"https://posit-dev.github.io/btw/reference/btw_register_tools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tools: Register tools from btw — btw_register_tools","text":"chat ellmer Chat object. tools Names tools tool groups include registering tools, e.g. tools = \"docs\" include documentation related tools, tools = c(\"data\", \"docs\", \"environment\"), etc.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_register_tools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tools: Register tools from btw — btw_register_tools","text":"Registers tools chat, updating chat object place. chat input returned invisibly.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_register_tools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tools: Register tools from btw — btw_register_tools","text":"","code":"# requires an ANTHROPIC_API_KEY if (FALSE) { # \\dontrun{ ch <- ellmer::chat_claude()  btw_register_tools(ch) } # }"},{"path":"https://posit-dev.github.io/btw/reference/btw_this.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe objects — btw_this.character","title":"Describe objects — btw_this.character","text":"Character strings btw_this() used shortcuts many underlying methods. btw_this() detects specific formats input string determine method call, default try evaluate character string R code return appropriate object description. btw_this() knows following special character string formats: \"./path\"  string starting ./ treated relative path. path file, call btw_tool_read_text_file() path directory call btw_tool_list_files() path. btw_this(\"./data\") lists files data/. btw_this(\"./R/load_data.R\") reads source R/load_data.R file. \"{pkgName}\"  package name wrapped braces. Returns either introductory vignette package (btw_tool_get_vignette_from_package()) list help topics vignette exists (btw_tool_get_package_help_topics()). btw_this(\"{dplyr}\") includes dplyr's introductory vignette. btw_this(\"{btw}\") returns package help index (btw intro vignette, yet). \"?help_topic\"  string starts ?, btw searches R's help topics using btw_tool_get_help_page(). btw_this(\"?dplyr::across\") includes reference page dplyr::across. \"@current_file\" \"@current_selection\"  used RStudio Positron, anywhere else rstudioapi supported, btw(\"@current_file\") includes contents file currently open editor using rstudioapi::getSourceEditorContext(). \"@platform_info\"  Includes information current platform, R version, operating system, IDE UI used, well language, locale, timezone current date. \"@attached_packages\", \"@loaded_packages\", \"@installed_packages\"  Includes information attached, loaded, installed packages R session, using sessioninfo::package_info(). \"@last_error\"  Includes message last error occurred session. reliably capture last error, need enable rlang::global_entrace() session. \"@last_value\"  Includes .Last.value, .e. result last expression evaluated R console.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe objects — btw_this.character","text":"","code":"# S3 method for class 'character' btw_this(x, ..., caller_env = parent.frame())"},{"path":"https://posit-dev.github.io/btw/reference/btw_this.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe objects — btw_this.character","text":"x character string ... Ignored. caller_env caller environment.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe objects — btw_this.character","text":"character vector lines describing object.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a data frame in plain text — btw_this.data.frame","title":"Describe a data frame in plain text — btw_this.data.frame","text":"Describe data frame plain text","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a data frame in plain text — btw_this.data.frame","text":"","code":"# S3 method for class 'data.frame' btw_this(   x,   ...,   format = c(\"skim\", \"glimpse\", \"print\", \"json\"),   dims = c(5, 100) )  # S3 method for class 'tbl' btw_this(   x,   ...,   format = c(\"skim\", \"glimpse\", \"print\", \"json\"),   dims = c(5, 100) )"},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a data frame in plain text — btw_this.data.frame","text":"x data frame tibble. ... Additional arguments silently ignored. format One \"skim\", \"glimpse\", \"print\", \"json\". \"skim\" information-dense format describing data. uses returns information skimr::skim() formatting JSON object describes dataset. glimpse data column--column, use \"glimpse\". particularly helpful getting sense data frame column names, types, distributions, pairings entries individual rows particularly important. just print data frame, use print(). get json representation data, use \"json\". particularly helpful pairings among entries specific rows important demonstrate. dims number rows columns show, numeric vector length two. example, default dims = c(5, 100) shows first 5 rows 100 columns, whereas dims = c(Inf, Inf) show data.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a data frame in plain text — btw_this.data.frame","text":"character vector containing representation data frame. error named data frame found environment.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Describe a data frame in plain text — btw_this.data.frame","text":"btw_this(data.frame): Summarize data frame. btw_this(tbl): Summarize tbl.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_this.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe a data frame in plain text — btw_this.data.frame","text":"","code":"btw_this(mtcars) #> [1] \"```json{\\\"n_cols\\\":11,\\\"n_rows\\\":32,\\\"groups\\\":[],\\\"class\\\":\\\"data.frame\\\",\\\"columns\\\":{\\\"mpg\\\":{\\\"variable\\\":\\\"mpg\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":20.0906,\\\"sd\\\":6.0269,\\\"p0\\\":10.4,\\\"p25\\\":15.425,\\\"p50\\\":19.2,\\\"p75\\\":22.8,\\\"p100\\\":33.9},\\\"cyl\\\":{\\\"variable\\\":\\\"cyl\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":6.1875,\\\"sd\\\":1.7859,\\\"p0\\\":4,\\\"p25\\\":4,\\\"p50\\\":6,\\\"p75\\\":8,\\\"p100\\\":8},\\\"disp\\\":{\\\"variable\\\":\\\"disp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":230.7219,\\\"sd\\\":123.9387,\\\"p0\\\":71.1,\\\"p25\\\":120.825,\\\"p50\\\":196.3,\\\"p75\\\":326,\\\"p100\\\":472},\\\"hp\\\":{\\\"variable\\\":\\\"hp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":146.6875,\\\"sd\\\":68.5629,\\\"p0\\\":52,\\\"p25\\\":96.5,\\\"p50\\\":123,\\\"p75\\\":180,\\\"p100\\\":335},\\\"drat\\\":{\\\"variable\\\":\\\"drat\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.5966,\\\"sd\\\":0.5347,\\\"p0\\\":2.76,\\\"p25\\\":3.08,\\\"p50\\\":3.695,\\\"p75\\\":3.92,\\\"p100\\\":4.93},\\\"wt\\\":{\\\"variable\\\":\\\"wt\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.2172,\\\"sd\\\":0.9785,\\\"p0\\\":1.513,\\\"p25\\\":2.5812,\\\"p50\\\":3.325,\\\"p75\\\":3.61,\\\"p100\\\":5.424},\\\"qsec\\\":{\\\"variable\\\":\\\"qsec\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":17.8487,\\\"sd\\\":1.7869,\\\"p0\\\":14.5,\\\"p25\\\":16.8925,\\\"p50\\\":17.71,\\\"p75\\\":18.9,\\\"p100\\\":22.9},\\\"vs\\\":{\\\"variable\\\":\\\"vs\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4375,\\\"sd\\\":0.504,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"am\\\":{\\\"variable\\\":\\\"am\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4062,\\\"sd\\\":0.499,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"gear\\\":{\\\"variable\\\":\\\"gear\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.6875,\\\"sd\\\":0.7378,\\\"p0\\\":3,\\\"p25\\\":3,\\\"p50\\\":4,\\\"p75\\\":4,\\\"p100\\\":5},\\\"carb\\\":{\\\"variable\\\":\\\"carb\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":2.8125,\\\"sd\\\":1.6152,\\\"p0\\\":1,\\\"p25\\\":2,\\\"p50\\\":2,\\\"p75\\\":4,\\\"p100\\\":8}}}\" #> [3] \"```btw_this(mtcars, format = \"print\") #> [1] \"    mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\" #> [2] \"  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\" #> [3] \"1  21       6   160   110  3.9   2.62  16.5     0     1     4     4\" #> [4] \"2  21       6   160   110  3.9   2.88  17.0     0     1     4     4\" #> [5] \"3  22.8     4   108    93  3.85  2.32  18.6     1     1     4     1\" #> [6] \"4  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1\" #> [7] \"5  18.7     8   360   175  3.15  3.44  17.0     0     0     3     2\" #> attr(,\"class\") #> [1] \"btw_captured\" \"character\"     btw_this(mtcars, format = \"json\") #> [1] \"```jsonn  {\\\"mpg\\\":21,\\\"cyl\\\":6,\\\"disp\\\":160,\\\"hp\\\":110,\\\"drat\\\":3.9,\\\"wt\\\":2.62,\\\"qsec\\\":16.46,\\\"vs\\\":0,\\\"am\\\":1,\\\"gear\\\":4,\\\"carb\\\":4},\\n  {\\\"mpg\\\":21,\\\"cyl\\\":6,\\\"disp\\\":160,\\\"hp\\\":110,\\\"drat\\\":3.9,\\\"wt\\\":2.875,\\\"qsec\\\":17.02,\\\"vs\\\":0,\\\"am\\\":1,\\\"gear\\\":4,\\\"carb\\\":4},\\n  {\\\"mpg\\\":22.8,\\\"cyl\\\":4,\\\"disp\\\":108,\\\"hp\\\":93,\\\"drat\\\":3.85,\\\"wt\\\":2.32,\\\"qsec\\\":18.61,\\\"vs\\\":1,\\\"am\\\":1,\\\"gear\\\":4,\\\"carb\\\":1},\\n  {\\\"mpg\\\":21.4,\\\"cyl\\\":6,\\\"disp\\\":258,\\\"hp\\\":110,\\\"drat\\\":3.08,\\\"wt\\\":3.215,\\\"qsec\\\":19.44,\\\"vs\\\":1,\\\"am\\\":0,\\\"gear\\\":3,\\\"carb\\\":1},\\n  {\\\"mpg\\\":18.7,\\\"cyl\\\":8,\\\"disp\\\":360,\\\"hp\\\":175,\\\"drat\\\":3.15,\\\"wt\\\":3.44,\\\"qsec\\\":17.02,\\\"vs\\\":0,\\\"am\\\":0,\\\"gear\\\":3,\\\"carb\\\":2}\\n]\" #> [3] \"```\""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe the contents of an environment — btw_this.environment","title":"Describe the contents of an environment — btw_this.environment","text":"Describe contents environment","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe the contents of an environment — btw_this.environment","text":"","code":"# S3 method for class 'environment' btw_this(x, ..., items = NULL)"},{"path":"https://posit-dev.github.io/btw/reference/btw_this.environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe the contents of an environment — btw_this.environment","text":"x environment. ... Additional arguments silently ignored. items Optional. character vector objects environment describe.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe the contents of an environment — btw_this.environment","text":"string describing environment contents #> prefixing object's printed representation.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_this.environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe the contents of an environment — btw_this.environment","text":"","code":"cyl_6 <- mtcars[mtcars$cyl == 6, ] gear_5 <- mtcars[mtcars$gear == 5, ] btw_this(environment()) #> [1] \"## Context\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #> [2] \"\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #> [3] \"cyl_6\\n```json\\n{\\\"n_cols\\\":11,\\\"n_rows\\\":7,\\\"groups\\\":[],\\\"class\\\":\\\"data.frame\\\",\\\"columns\\\":{\\\"mpg\\\":{\\\"variable\\\":\\\"mpg\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":19.7429,\\\"sd\\\":1.4536,\\\"p0\\\":17.8,\\\"p25\\\":18.65,\\\"p50\\\":19.7,\\\"p75\\\":21,\\\"p100\\\":21.4},\\\"cyl\\\":{\\\"variable\\\":\\\"cyl\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":6,\\\"sd\\\":0,\\\"p0\\\":6,\\\"p25\\\":6,\\\"p50\\\":6,\\\"p75\\\":6,\\\"p100\\\":6},\\\"disp\\\":{\\\"variable\\\":\\\"disp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":183.3143,\\\"sd\\\":41.5625,\\\"p0\\\":145,\\\"p25\\\":160,\\\"p50\\\":167.6,\\\"p75\\\":196.3,\\\"p100\\\":258},\\\"hp\\\":{\\\"variable\\\":\\\"hp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":122.2857,\\\"sd\\\":24.2605,\\\"p0\\\":105,\\\"p25\\\":110,\\\"p50\\\":110,\\\"p75\\\":123,\\\"p100\\\":175},\\\"drat\\\":{\\\"variable\\\":\\\"drat\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.5857,\\\"sd\\\":0.4761,\\\"p0\\\":2.76,\\\"p25\\\":3.35,\\\"p50\\\":3.9,\\\"p75\\\":3.91,\\\"p100\\\":3.92},\\\"wt\\\":{\\\"variable\\\":\\\"wt\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.1171,\\\"sd\\\":0.3563,\\\"p0\\\":2.62,\\\"p25\\\":2.8225,\\\"p50\\\":3.215,\\\"p75\\\":3.44,\\\"p100\\\":3.46},\\\"qsec\\\":{\\\"variable\\\":\\\"qsec\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":17.9771,\\\"sd\\\":1.7069,\\\"p0\\\":15.5,\\\"p25\\\":16.74,\\\"p50\\\":18.3,\\\"p75\\\":19.17,\\\"p100\\\":20.22},\\\"vs\\\":{\\\"variable\\\":\\\"vs\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.5714,\\\"sd\\\":0.5345,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":1,\\\"p75\\\":1,\\\"p100\\\":1},\\\"am\\\":{\\\"variable\\\":\\\"am\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4286,\\\"sd\\\":0.5345,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"gear\\\":{\\\"variable\\\":\\\"gear\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.8571,\\\"sd\\\":0.6901,\\\"p0\\\":3,\\\"p25\\\":3.5,\\\"p50\\\":4,\\\"p75\\\":4,\\\"p100\\\":5},\\\"carb\\\":{\\\"variable\\\":\\\"carb\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.4286,\\\"sd\\\":1.8127,\\\"p0\\\":1,\\\"p25\\\":2.5,\\\"p50\\\":4,\\\"p75\\\":4,\\\"p100\\\":6}}}\\n```gear_5\\n```json\\n{\\\"n_cols\\\":11,\\\"n_rows\\\":5,\\\"groups\\\":[],\\\"class\\\":\\\"data.frame\\\",\\\"columns\\\":{\\\"mpg\\\":{\\\"variable\\\":\\\"mpg\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":21.38,\\\"sd\\\":6.659,\\\"p0\\\":15,\\\"p25\\\":15.8,\\\"p50\\\":19.7,\\\"p75\\\":26,\\\"p100\\\":30.4},\\\"cyl\\\":{\\\"variable\\\":\\\"cyl\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":6,\\\"sd\\\":2,\\\"p0\\\":4,\\\"p25\\\":4,\\\"p50\\\":6,\\\"p75\\\":8,\\\"p100\\\":8},\\\"disp\\\":{\\\"variable\\\":\\\"disp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":202.48,\\\"sd\\\":115.4906,\\\"p0\\\":95.1,\\\"p25\\\":120.3,\\\"p50\\\":145,\\\"p75\\\":301,\\\"p100\\\":351},\\\"hp\\\":{\\\"variable\\\":\\\"hp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":195.6,\\\"sd\\\":102.8338,\\\"p0\\\":91,\\\"p25\\\":113,\\\"p50\\\":175,\\\"p75\\\":264,\\\"p100\\\":335},\\\"drat\\\":{\\\"variable\\\":\\\"drat\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.916,\\\"sd\\\":0.3895,\\\"p0\\\":3.54,\\\"p25\\\":3.62,\\\"p50\\\":3.77,\\\"p75\\\":4.22,\\\"p100\\\":4.43},\\\"wt\\\":{\\\"variable\\\":\\\"wt\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":2.6326,\\\"sd\\\":0.8189,\\\"p0\\\":1.513,\\\"p25\\\":2.14,\\\"p50\\\":2.77,\\\"p75\\\":3.17,\\\"p100\\\":3.57},\\\"qsec\\\":{\\\"variable\\\":\\\"qsec\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":15.64,\\\"sd\\\":1.1305,\\\"p0\\\":14.5,\\\"p25\\\":14.6,\\\"p50\\\":15.5,\\\"p75\\\":16.7,\\\"p100\\\":16.9},\\\"vs\\\":{\\\"variable\\\":\\\"vs\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.2,\\\"sd\\\":0.4472,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":0,\\\"p100\\\":1},\\\"am\\\":{\\\"variable\\\":\\\"am\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":1,\\\"sd\\\":0,\\\"p0\\\":1,\\\"p25\\\":1,\\\"p50\\\":1,\\\"p75\\\":1,\\\"p100\\\":1},\\\"gear\\\":{\\\"variable\\\":\\\"gear\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":5,\\\"sd\\\":0,\\\"p0\\\":5,\\\"p25\\\":5,\\\"p50\\\":5,\\\"p75\\\":5,\\\"p100\\\":5},\\\"carb\\\":{\\\"variable\\\":\\\"carb\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":4.4,\\\"sd\\\":2.6077,\\\"p0\\\":2,\\\"p25\\\":2,\\\"p50\\\":4,\\\"p75\\\":6,\\\"p100\\\":8}}}\\n```\""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe something for use by an LLM — btw_this","title":"Describe something for use by an LLM — btw_this","text":"generic function used describe object use LLM.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe something for use by an LLM — btw_this","text":"","code":"btw_this(x, ...)"},{"path":"https://posit-dev.github.io/btw/reference/btw_this.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe something for use by an LLM — btw_this","text":"x thing describe. ... Additional arguments passed underlying methods. Unused arguments silently ignored.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_this.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe something for use by an LLM — btw_this","text":"character vector lines describing object.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_this.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe something for use by an LLM — btw_this","text":"","code":"btw_this(mtcars) #> [1] \"```json{\\\"n_cols\\\":11,\\\"n_rows\\\":32,\\\"groups\\\":[],\\\"class\\\":\\\"data.frame\\\",\\\"columns\\\":{\\\"mpg\\\":{\\\"variable\\\":\\\"mpg\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":20.0906,\\\"sd\\\":6.0269,\\\"p0\\\":10.4,\\\"p25\\\":15.425,\\\"p50\\\":19.2,\\\"p75\\\":22.8,\\\"p100\\\":33.9},\\\"cyl\\\":{\\\"variable\\\":\\\"cyl\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":6.1875,\\\"sd\\\":1.7859,\\\"p0\\\":4,\\\"p25\\\":4,\\\"p50\\\":6,\\\"p75\\\":8,\\\"p100\\\":8},\\\"disp\\\":{\\\"variable\\\":\\\"disp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":230.7219,\\\"sd\\\":123.9387,\\\"p0\\\":71.1,\\\"p25\\\":120.825,\\\"p50\\\":196.3,\\\"p75\\\":326,\\\"p100\\\":472},\\\"hp\\\":{\\\"variable\\\":\\\"hp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":146.6875,\\\"sd\\\":68.5629,\\\"p0\\\":52,\\\"p25\\\":96.5,\\\"p50\\\":123,\\\"p75\\\":180,\\\"p100\\\":335},\\\"drat\\\":{\\\"variable\\\":\\\"drat\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.5966,\\\"sd\\\":0.5347,\\\"p0\\\":2.76,\\\"p25\\\":3.08,\\\"p50\\\":3.695,\\\"p75\\\":3.92,\\\"p100\\\":4.93},\\\"wt\\\":{\\\"variable\\\":\\\"wt\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.2172,\\\"sd\\\":0.9785,\\\"p0\\\":1.513,\\\"p25\\\":2.5812,\\\"p50\\\":3.325,\\\"p75\\\":3.61,\\\"p100\\\":5.424},\\\"qsec\\\":{\\\"variable\\\":\\\"qsec\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":17.8487,\\\"sd\\\":1.7869,\\\"p0\\\":14.5,\\\"p25\\\":16.8925,\\\"p50\\\":17.71,\\\"p75\\\":18.9,\\\"p100\\\":22.9},\\\"vs\\\":{\\\"variable\\\":\\\"vs\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4375,\\\"sd\\\":0.504,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"am\\\":{\\\"variable\\\":\\\"am\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4062,\\\"sd\\\":0.499,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"gear\\\":{\\\"variable\\\":\\\"gear\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.6875,\\\"sd\\\":0.7378,\\\"p0\\\":3,\\\"p25\\\":3,\\\"p50\\\":4,\\\"p75\\\":4,\\\"p100\\\":5},\\\"carb\\\":{\\\"variable\\\":\\\"carb\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":2.8125,\\\"sd\\\":1.6152,\\\"p0\\\":1,\\\"p25\\\":2,\\\"p50\\\":2,\\\"p75\\\":4,\\\"p100\\\":8}}}\" #> [3] \"```btw_this(dplyr::mutate) #> [1] \"```r\"                      \"function (.data, ...) \"    #> [3] \"{\"                         \"    UseMethod(\\\"mutate\\\")\" #> [5] \"}\"                         \"```\"                       btw_this(\"{dplyr}\") #>   [1] \"# Introduction to dplyr {#introduction-to-dplyr .title .toc-ignore}\"                 #>   [2] \"\"                                                                                    #>   [3] \"When working with data you must:\"                                                    #>   [4] \"\"                                                                                    #>   [5] \"-   Figure out what you want to do.\"                                                 #>   [6] \"\"                                                                                    #>   [7] \"-   Describe those tasks in the form of a computer program.\"                         #>   [8] \"\"                                                                                    #>   [9] \"-   Execute the program.\"                                                            #>  [10] \"\"                                                                                    #>  [11] \"The dplyr package makes these steps fast and easy:\"                                  #>  [12] \"\"                                                                                    #>  [13] \"-   By constraining your options, it helps you think about your data\"                #>  [14] \"    manipulation challenges.\"                                                        #>  [15] \"\"                                                                                    #>  [16] \"-   It provides simple \\\"verbs\\\", functions that correspond to the most\"             #>  [17] \"    common data manipulation tasks, to help you translate your thoughts\"             #>  [18] \"    into code.\"                                                                      #>  [19] \"\"                                                                                    #>  [20] \"-   It uses efficient backends, so you spend less time waiting for the\"              #>  [21] \"    computer.\"                                                                       #>  [22] \"\"                                                                                    #>  [23] \"This document introduces you to dplyr's basic set of tools, and shows\"               #>  [24] \"you how to apply them to data frames. dplyr also supports databases via\"             #>  [25] \"the dbplyr package, once you've installed, read `vignette(\\\"dbplyr\\\")` to\"           #>  [26] \"learn more.\"                                                                         #>  [27] \"\"                                                                                    #>  [28] \"::: {#data-starwars .section .level2}\"                                               #>  [29] \"## Data: starwars\"                                                                   #>  [30] \"\"                                                                                    #>  [31] \"To explore the basic data manipulation verbs of dplyr, we'll use the\"                #>  [32] \"dataset `starwars`. This dataset contains 87 characters and comes from\"              #>  [33] \"the [Star Wars API](https://swapi.dev), and is documented in `?starwars`\"            #>  [34] \"\"                                                                                    #>  [35] \"::: {#cb1 .sourceCode}\"                                                              #>  [36] \"``` {.sourceCode .r}\"                                                                #>  [37] \"dim(starwars)\"                                                                       #>  [38] \"#> [1] 87 14\"                                                                        #>  [39] \"starwars\"                                                                            #>  [40] \"#> # A tibble: 87 × 14\"                                                              #>  [41] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #>  [42] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #>  [43] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #>  [44] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #>  [45] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #>  [46] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #>  [47] \"#> # ℹ 83 more rows\"                                                                 #>  [48] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #>  [49] \"#> #   vehicles <list>, starships <list>\"                                            #>  [50] \"```\"                                                                                 #>  [51] \":::\"                                                                                 #>  [52] \"\"                                                                                    #>  [53] \"Note that `starwars` is a tibble, a modern reimagining of the data\"                  #>  [54] \"frame. It's particularly useful for large datasets because it only\"                  #>  [55] \"prints the first few rows. You can learn more about tibbles at\"                      #>  [56] \"<https://tibble.tidyverse.org>; in particular you can convert data\"                  #>  [57] \"frames to tibbles with `as_tibble()`.\"                                               #>  [58] \":::\"                                                                                 #>  [59] \"\"                                                                                    #>  [60] \"::: {#single-table-verbs .section .level2}\"                                          #>  [61] \"## Single table verbs\"                                                               #>  [62] \"\"                                                                                    #>  [63] \"dplyr aims to provide a function for each basic verb of data\"                        #>  [64] \"manipulation. These verbs can be organised into three categories based\"              #>  [65] \"on the component of the dataset that they work with:\"                                #>  [66] \"\"                                                                                    #>  [67] \"-   Rows:\"                                                                           #>  [68] \"    -   `filter()` chooses rows based on column values.\"                             #>  [69] \"    -   `slice()` chooses rows based on location.\"                                   #>  [70] \"    -   `arrange()` changes the order of the rows.\"                                  #>  [71] \"-   Columns:\"                                                                        #>  [72] \"    -   `select()` changes whether or not a column is included.\"                     #>  [73] \"    -   `rename()` changes the name of columns.\"                                     #>  [74] \"    -   `mutate()` changes the values of columns and creates new\"                    #>  [75] \"        columns.\"                                                                    #>  [76] \"    -   `relocate()` changes the order of the columns.\"                              #>  [77] \"-   Groups of rows:\"                                                                 #>  [78] \"    -   `summarise()` collapses a group into a single row.\"                          #>  [79] \"\"                                                                                    #>  [80] \"::: {#the-pipe .section .level3}\"                                                    #>  [81] \"### The pipe\"                                                                        #>  [82] \"\"                                                                                    #>  [83] \"All of the dplyr functions take a data frame (or tibble) as the first\"               #>  [84] \"argument. Rather than forcing the user to either save intermediate\"                  #>  [85] \"objects or nest functions, dplyr provides the `%>%` operator from\"                   #>  [86] \"magrittr. `x %>% f(y)` turns into `f(x, y)` so the result from one step\"             #>  [87] \"is then \\\"piped\\\" into the next step. You can use the pipe to rewrite\"               #>  [88] \"multiple operations that you can read left-to-right, top-to-bottom\"                  #>  [89] \"(reading the pipe operator as \\\"then\\\").\"                                            #>  [90] \":::\"                                                                                 #>  [91] \"\"                                                                                    #>  [92] \"::: {#filter-rows-with-filter .section .level3}\"                                     #>  [93] \"### Filter rows with `filter()`\"                                                     #>  [94] \"\"                                                                                    #>  [95] \"`filter()` allows you to select a subset of rows in a data frame. Like\"              #>  [96] \"all single verbs, the first argument is the tibble (or data frame). The\"             #>  [97] \"second and subsequent arguments refer to variables within that data\"                 #>  [98] \"frame, selecting rows where the expression is `TRUE`.\"                               #>  [99] \"\"                                                                                    #> [100] \"For example, we can select all character with light skin color and brown\"            #> [101] \"eyes with:\"                                                                          #> [102] \"\"                                                                                    #> [103] \"::: {#cb2 .sourceCode}\"                                                              #> [104] \"``` {.sourceCode .r}\"                                                                #> [105] \"starwars %>% filter(skin_color == \\\"light\\\", eye_color == \\\"brown\\\")\"                #> [106] \"#> # A tibble: 7 × 14\"                                                               #> [107] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [108] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [109] \"#> 1 Leia Org…    150    49 brown      light      brown             19 fema… femin…\" #> [110] \"#> 2 Biggs Da…    183    84 black      light      brown             24 male  mascu…\" #> [111] \"#> 3 Padmé Am…    185    45 brown      light      brown             46 fema… femin…\" #> [112] \"#> 4 Cordé        157    NA brown      light      brown             NA <NA>  <NA>  \" #> [113] \"#> # ℹ 3 more rows\"                                                                  #> [114] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [115] \"#> #   vehicles <list>, starships <list>\"                                            #> [116] \"```\"                                                                                 #> [117] \":::\"                                                                                 #> [118] \"\"                                                                                    #> [119] \"This is roughly equivalent to this base R code:\"                                     #> [120] \"\"                                                                                    #> [121] \"::: {#cb3 .sourceCode}\"                                                              #> [122] \"``` {.sourceCode .r}\"                                                                #> [123] \"starwars[starwars$skin_color == \\\"light\\\" & starwars$eye_color == \\\"brown\\\", ]\"      #> [124] \"```\"                                                                                 #> [125] \":::\"                                                                                 #> [126] \":::\"                                                                                 #> [127] \"\"                                                                                    #> [128] \"::: {#arrange-rows-with-arrange .section .level3}\"                                   #> [129] \"### Arrange rows with `arrange()`\"                                                   #> [130] \"\"                                                                                    #> [131] \"`arrange()` works similarly to `filter()` except that instead of\"                    #> [132] \"filtering or selecting rows, it reorders them. It takes a data frame,\"               #> [133] \"and a set of column names (or more complicated expressions) to order by.\"            #> [134] \"If you provide more than one column name, each additional column will be\"            #> [135] \"used to break ties in the values of preceding columns:\"                              #> [136] \"\"                                                                                    #> [137] \"::: {#cb4 .sourceCode}\"                                                              #> [138] \"``` {.sourceCode .r}\"                                                                #> [139] \"starwars %>% arrange(height, mass)\"                                                  #> [140] \"#> # A tibble: 87 × 14\"                                                              #> [141] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [142] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [143] \"#> 1 Yoda          66    17 white      green      brown            896 male  mascu…\" #> [144] \"#> 2 Ratts Ty…     79    15 none       grey, blue unknown           NA male  mascu…\" #> [145] \"#> 3 Wicket S…     88    20 brown      brown      brown              8 male  mascu…\" #> [146] \"#> 4 Dud Bolt      94    45 none       blue, grey yellow            NA male  mascu…\" #> [147] \"#> # ℹ 83 more rows\"                                                                 #> [148] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [149] \"#> #   vehicles <list>, starships <list>\"                                            #> [150] \"```\"                                                                                 #> [151] \":::\"                                                                                 #> [152] \"\"                                                                                    #> [153] \"Use `desc()` to order a column in descending order:\"                                 #> [154] \"\"                                                                                    #> [155] \"::: {#cb5 .sourceCode}\"                                                              #> [156] \"``` {.sourceCode .r}\"                                                                #> [157] \"starwars %>% arrange(desc(height))\"                                                  #> [158] \"#> # A tibble: 87 × 14\"                                                              #> [159] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [160] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [161] \"#> 1 Yarael P…    264    NA none       white      yellow            NA male  mascu…\" #> [162] \"#> 2 Tarfful      234   136 brown      brown      blue              NA male  mascu…\" #> [163] \"#> 3 Lama Su      229    88 none       grey       black             NA male  mascu…\" #> [164] \"#> 4 Chewbacca    228   112 brown      unknown    blue             200 male  mascu…\" #> [165] \"#> # ℹ 83 more rows\"                                                                 #> [166] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [167] \"#> #   vehicles <list>, starships <list>\"                                            #> [168] \"```\"                                                                                 #> [169] \":::\"                                                                                 #> [170] \":::\"                                                                                 #> [171] \"\"                                                                                    #> [172] \"::: {#choose-rows-using-their-position-with-slice .section .level3}\"                 #> [173] \"### Choose rows using their position with `slice()`\"                                 #> [174] \"\"                                                                                    #> [175] \"`slice()` lets you index rows by their (integer) locations. It allows\"               #> [176] \"you to select, remove, and duplicate rows.\"                                          #> [177] \"\"                                                                                    #> [178] \"We can get characters from row numbers 5 through 10.\"                                #> [179] \"\"                                                                                    #> [180] \"::: {#cb6 .sourceCode}\"                                                              #> [181] \"``` {.sourceCode .r}\"                                                                #> [182] \"starwars %>% slice(5:10)\"                                                            #> [183] \"#> # A tibble: 6 × 14\"                                                               #> [184] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [185] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [186] \"#> 1 Leia Org…    150    49 brown      light      brown             19 fema… femin…\" #> [187] \"#> 2 Owen Lars    178   120 brown, gr… light      blue              52 male  mascu…\" #> [188] \"#> 3 Beru Whi…    165    75 brown      light      blue              47 fema… femin…\" #> [189] \"#> 4 R5-D4         97    32 <NA>       white, red red               NA none  mascu…\" #> [190] \"#> # ℹ 2 more rows\"                                                                  #> [191] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [192] \"#> #   vehicles <list>, starships <list>\"                                            #> [193] \"```\"                                                                                 #> [194] \":::\"                                                                                 #> [195] \"\"                                                                                    #> [196] \"It is accompanied by a number of helpers for common use cases:\"                      #> [197] \"\"                                                                                    #> [198] \"-   `slice_head()` and `slice_tail()` select the first or last rows.\"                #> [199] \"\"                                                                                    #> [200] \"::: {#cb7 .sourceCode}\"                                                              #> [201] \"``` {.sourceCode .r}\"                                                                #> [202] \"starwars %>% slice_head(n = 3)\"                                                      #> [203] \"#> # A tibble: 3 × 14\"                                                               #> [204] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [205] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [206] \"#> 1 Luke Sky…    172    77 blond      fair       blue              19 male  mascu…\" #> [207] \"#> 2 C-3PO        167    75 <NA>       gold       yellow           112 none  mascu…\" #> [208] \"#> 3 R2-D2         96    32 <NA>       white, bl… red               33 none  mascu…\" #> [209] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [210] \"#> #   vehicles <list>, starships <list>\"                                            #> [211] \"```\"                                                                                 #> [212] \":::\"                                                                                 #> [213] \"\"                                                                                    #> [214] \"-   `slice_sample()` randomly selects rows. Use the option prop to\"                  #> [215] \"    choose a certain proportion of the cases.\"                                       #> [216] \"\"                                                                                    #> [217] \"::: {#cb8 .sourceCode}\"                                                              #> [218] \"``` {.sourceCode .r}\"                                                                #> [219] \"starwars %>% slice_sample(n = 5)\"                                                    #> [220] \"#> # A tibble: 5 × 14\"                                                               #> [221] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [222] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [223] \"#> 1 Ayla Sec…    178  55   none       blue       hazel             48 fema… femin…\" #> [224] \"#> 2 Bossk        190 113   none       green      red               53 male  mascu…\" #> [225] \"#> 3 San Hill     191  NA   none       grey       gold              NA male  mascu…\" #> [226] \"#> 4 Luminara…    170  56.2 black      yellow     blue              58 fema… femin…\" #> [227] \"#> # ℹ 1 more row\"                                                                   #> [228] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [229] \"#> #   vehicles <list>, starships <list>\"                                            #> [230] \"starwars %>% slice_sample(prop = 0.1)\"                                               #> [231] \"#> # A tibble: 8 × 14\"                                                               #> [232] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [233] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [234] \"#> 1 Qui-Gon …    193    89 brown      fair       blue              92 male  mascu…\" #> [235] \"#> 2 Jango Fe…    183    79 black      tan        brown             66 male  mascu…\" #> [236] \"#> 3 Jocasta …    167    NA white      fair       blue              NA fema… femin…\" #> [237] \"#> 4 Zam Wese…    168    55 blonde     fair, gre… yellow            NA fema… femin…\" #> [238] \"#> # ℹ 4 more rows\"                                                                  #> [239] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [240] \"#> #   vehicles <list>, starships <list>\"                                            #> [241] \"```\"                                                                                 #> [242] \":::\"                                                                                 #> [243] \"\"                                                                                    #> [244] \"Use `replace = TRUE` to perform a bootstrap sample. If needed, you can\"              #> [245] \"weight the sample with the `weight` argument.\"                                       #> [246] \"\"                                                                                    #> [247] \"-   `slice_min()` and `slice_max()` select rows with highest or lowest\"              #> [248] \"    values of a variable. Note that we first must choose only the values\"            #> [249] \"    which are not NA.\"                                                               #> [250] \"\"                                                                                    #> [251] \"::: {#cb9 .sourceCode}\"                                                              #> [252] \"``` {.sourceCode .r}\"                                                                #> [253] \"starwars %>%\"                                                                        #> [254] \"  filter(!is.na(height)) %>%\"                                                        #> [255] \"  slice_max(height, n = 3)\"                                                          #> [256] \"#> # A tibble: 3 × 14\"                                                               #> [257] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [258] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [259] \"#> 1 Yarael P…    264    NA none       white      yellow            NA male  mascu…\" #> [260] \"#> 2 Tarfful      234   136 brown      brown      blue              NA male  mascu…\" #> [261] \"#> 3 Lama Su      229    88 none       grey       black             NA male  mascu…\" #> [262] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [263] \"#> #   vehicles <list>, starships <list>\"                                            #> [264] \"```\"                                                                                 #> [265] \":::\"                                                                                 #> [266] \":::\"                                                                                 #> [267] \"\"                                                                                    #> [268] \"::: {#select-columns-with-select .section .level3}\"                                  #> [269] \"### Select columns with `select()`\"                                                  #> [270] \"\"                                                                                    #> [271] \"Often you work with large datasets with many columns but only a few are\"             #> [272] \"actually of interest to you. `select()` allows you to rapidly zoom in on\"            #> [273] \"a useful subset using operations that usually only work on numeric\"                  #> [274] \"variable positions:\"                                                                 #> [275] \"\"                                                                                    #> [276] \"::: {#cb10 .sourceCode}\"                                                             #> [277] \"``` {.sourceCode .r}\"                                                                #> [278] \"# Select columns by name\"                                                            #> [279] \"starwars %>% select(hair_color, skin_color, eye_color)\"                              #> [280] \"#> # A tibble: 87 × 3\"                                                               #> [281] \"#>   hair_color skin_color  eye_color\"                                               #> [282] \"#>   <chr>      <chr>       <chr>    \"                                               #> [283] \"#> 1 blond      fair        blue     \"                                               #> [284] \"#> 2 <NA>       gold        yellow   \"                                               #> [285] \"#> 3 <NA>       white, blue red      \"                                               #> [286] \"#> 4 none       white       yellow   \"                                               #> [287] \"#> # ℹ 83 more rows\"                                                                 #> [288] \"# Select all columns between hair_color and eye_color (inclusive)\"                   #> [289] \"starwars %>% select(hair_color:eye_color)\"                                           #> [290] \"#> # A tibble: 87 × 3\"                                                               #> [291] \"#>   hair_color skin_color  eye_color\"                                               #> [292] \"#>   <chr>      <chr>       <chr>    \"                                               #> [293] \"#> 1 blond      fair        blue     \"                                               #> [294] \"#> 2 <NA>       gold        yellow   \"                                               #> [295] \"#> 3 <NA>       white, blue red      \"                                               #> [296] \"#> 4 none       white       yellow   \"                                               #> [297] \"#> # ℹ 83 more rows\"                                                                 #> [298] \"# Select all columns except those from hair_color to eye_color (inclusive)\"          #> [299] \"starwars %>% select(!(hair_color:eye_color))\"                                        #> [300] \"#> # A tibble: 87 × 11\"                                                              #> [301] \"#>   name     height  mass birth_year sex   gender homeworld species films vehicles\" #> [302] \"#>   <chr>     <int> <dbl>      <dbl> <chr> <chr>  <chr>     <chr>   <lis> <list>  \" #> [303] \"#> 1 Luke Sk…    172    77       19   male  mascu… Tatooine  Human   <chr> <chr>   \" #> [304] \"#> 2 C-3PO       167    75      112   none  mascu… Tatooine  Droid   <chr> <chr>   \" #> [305] \"#> 3 R2-D2        96    32       33   none  mascu… Naboo     Droid   <chr> <chr>   \" #> [306] \"#> 4 Darth V…    202   136       41.9 male  mascu… Tatooine  Human   <chr> <chr>   \" #> [307] \"#> # ℹ 83 more rows\"                                                                 #> [308] \"#> # ℹ 1 more variable: starships <list>\"                                            #> [309] \"# Select all columns ending with color\"                                              #> [310] \"starwars %>% select(ends_with(\\\"color\\\"))\"                                           #> [311] \"#> # A tibble: 87 × 3\"                                                               #> [312] \"#>   hair_color skin_color  eye_color\"                                               #> [313] \"#>   <chr>      <chr>       <chr>    \"                                               #> [314] \"#> 1 blond      fair        blue     \"                                               #> [315] \"#> 2 <NA>       gold        yellow   \"                                               #> [316] \"#> 3 <NA>       white, blue red      \"                                               #> [317] \"#> 4 none       white       yellow   \"                                               #> [318] \"#> # ℹ 83 more rows\"                                                                 #> [319] \"```\"                                                                                 #> [320] \":::\"                                                                                 #> [321] \"\"                                                                                    #> [322] \"There are a number of helper functions you can use within `select()`,\"               #> [323] \"like `starts_with()`, `ends_with()`, `matches()` and `contains()`. These\"            #> [324] \"let you quickly match larger blocks of variables that meet some\"                     #> [325] \"criterion. See `?select` for more details.\"                                          #> [326] \"\"                                                                                    #> [327] \"You can rename variables with `select()` by using named arguments:\"                  #> [328] \"\"                                                                                    #> [329] \"::: {#cb11 .sourceCode}\"                                                             #> [330] \"``` {.sourceCode .r}\"                                                                #> [331] \"starwars %>% select(home_world = homeworld)\"                                         #> [332] \"#> # A tibble: 87 × 1\"                                                               #> [333] \"#>   home_world\"                                                                     #> [334] \"#>   <chr>     \"                                                                     #> [335] \"#> 1 Tatooine  \"                                                                     #> [336] \"#> 2 Tatooine  \"                                                                     #> [337] \"#> 3 Naboo     \"                                                                     #> [338] \"#> 4 Tatooine  \"                                                                     #> [339] \"#> # ℹ 83 more rows\"                                                                 #> [340] \"```\"                                                                                 #> [341] \":::\"                                                                                 #> [342] \"\"                                                                                    #> [343] \"But because `select()` drops all the variables not explicitly mentioned,\"            #> [344] \"it's not that useful. Instead, use `rename()`:\"                                      #> [345] \"\"                                                                                    #> [346] \"::: {#cb12 .sourceCode}\"                                                             #> [347] \"``` {.sourceCode .r}\"                                                                #> [348] \"starwars %>% rename(home_world = homeworld)\"                                         #> [349] \"#> # A tibble: 87 × 14\"                                                              #> [350] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [351] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [352] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #> [353] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #> [354] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #> [355] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #> [356] \"#> # ℹ 83 more rows\"                                                                 #> [357] \"#> # ℹ 5 more variables: home_world <chr>, species <chr>, films <list>,\"             #> [358] \"#> #   vehicles <list>, starships <list>\"                                            #> [359] \"```\"                                                                                 #> [360] \":::\"                                                                                 #> [361] \":::\"                                                                                 #> [362] \"\"                                                                                    #> [363] \"::: {#add-new-columns-with-mutate .section .level3}\"                                 #> [364] \"### Add new columns with `mutate()`\"                                                 #> [365] \"\"                                                                                    #> [366] \"Besides selecting sets of existing columns, it's often useful to add new\"            #> [367] \"columns that are functions of existing columns. This is the job of\"                  #> [368] \"`mutate()`:\"                                                                         #> [369] \"\"                                                                                    #> [370] \"::: {#cb13 .sourceCode}\"                                                             #> [371] \"``` {.sourceCode .r}\"                                                                #> [372] \"starwars %>% mutate(height_m = height / 100)\"                                        #> [373] \"#> # A tibble: 87 × 15\"                                                              #> [374] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [375] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [376] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #> [377] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #> [378] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #> [379] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #> [380] \"#> # ℹ 83 more rows\"                                                                 #> [381] \"#> # ℹ 6 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [382] \"#> #   vehicles <list>, starships <list>, height_m <dbl>\"                            #> [383] \"```\"                                                                                 #> [384] \":::\"                                                                                 #> [385] \"\"                                                                                    #> [386] \"We can't see the height in meters we just calculated, but we can fix\"                #> [387] \"that using a select command.\"                                                        #> [388] \"\"                                                                                    #> [389] \"::: {#cb14 .sourceCode}\"                                                             #> [390] \"``` {.sourceCode .r}\"                                                                #> [391] \"starwars %>%\"                                                                        #> [392] \"  mutate(height_m = height / 100) %>%\"                                               #> [393] \"  select(height_m, height, everything())\"                                            #> [394] \"#> # A tibble: 87 × 15\"                                                              #> [395] \"#>   height_m height name     mass hair_color skin_color eye_color birth_year sex  \" #> [396] \"#>      <dbl>  <int> <chr>   <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\" #> [397] \"#> 1     1.72    172 Luke S…    77 blond      fair       blue            19   male \" #> [398] \"#> 2     1.67    167 C-3PO      75 <NA>       gold       yellow         112   none \" #> [399] \"#> 3     0.96     96 R2-D2      32 <NA>       white, bl… red             33   none \" #> [400] \"#> 4     2.02    202 Darth …   136 none       white      yellow          41.9 male \" #> [401] \"#> # ℹ 83 more rows\"                                                                 #> [402] \"#> # ℹ 6 more variables: gender <chr>, homeworld <chr>, species <chr>,\"              #> [403] \"#> #   films <list>, vehicles <list>, starships <list>\"                              #> [404] \"```\"                                                                                 #> [405] \":::\"                                                                                 #> [406] \"\"                                                                                    #> [407] \"`dplyr::mutate()` is similar to the base `transform()`, but allows you\"              #> [408] \"to refer to columns that you've just created:\"                                       #> [409] \"\"                                                                                    #> [410] \"::: {#cb15 .sourceCode}\"                                                             #> [411] \"``` {.sourceCode .r}\"                                                                #> [412] \"starwars %>%\"                                                                        #> [413] \"  mutate(\"                                                                           #> [414] \"    height_m = height / 100,\"                                                        #> [415] \"    BMI = mass / (height_m^2)\"                                                       #> [416] \"  ) %>%\"                                                                             #> [417] \"  select(BMI, everything())\"                                                         #> [418] \"#> # A tibble: 87 × 16\"                                                              #> [419] \"#>     BMI name       height  mass hair_color skin_color eye_color birth_year sex  \" #> [420] \"#>   <dbl> <chr>       <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>\" #> [421] \"#> 1  26.0 Luke Skyw…    172    77 blond      fair       blue            19   male \" #> [422] \"#> 2  26.9 C-3PO         167    75 <NA>       gold       yellow         112   none \" #> [423] \"#> 3  34.7 R2-D2          96    32 <NA>       white, bl… red             33   none \" #> [424] \"#> 4  33.3 Darth Vad…    202   136 none       white      yellow          41.9 male \" #> [425] \"#> # ℹ 83 more rows\"                                                                 #> [426] \"#> # ℹ 7 more variables: gender <chr>, homeworld <chr>, species <chr>,\"              #> [427] \"#> #   films <list>, vehicles <list>, starships <list>, height_m <dbl>\"              #> [428] \"```\"                                                                                 #> [429] \":::\"                                                                                 #> [430] \"\"                                                                                    #> [431] \"If you only want to keep the new variables, use `.keep = \\\"none\\\"`:\"                 #> [432] \"\"                                                                                    #> [433] \"::: {#cb16 .sourceCode}\"                                                             #> [434] \"``` {.sourceCode .r}\"                                                                #> [435] \"starwars %>%\"                                                                        #> [436] \"  mutate(\"                                                                           #> [437] \"    height_m = height / 100,\"                                                        #> [438] \"    BMI = mass / (height_m^2),\"                                                      #> [439] \"    .keep = \\\"none\\\"\"                                                                #> [440] \"  )\"                                                                                 #> [441] \"#> # A tibble: 87 × 2\"                                                               #> [442] \"#>   height_m   BMI\"                                                                 #> [443] \"#>      <dbl> <dbl>\"                                                                 #> [444] \"#> 1     1.72  26.0\"                                                                 #> [445] \"#> 2     1.67  26.9\"                                                                 #> [446] \"#> 3     0.96  34.7\"                                                                 #> [447] \"#> 4     2.02  33.3\"                                                                 #> [448] \"#> # ℹ 83 more rows\"                                                                 #> [449] \"```\"                                                                                 #> [450] \":::\"                                                                                 #> [451] \":::\"                                                                                 #> [452] \"\"                                                                                    #> [453] \"::: {#change-column-order-with-relocate .section .level3}\"                           #> [454] \"### Change column order with `relocate()`\"                                           #> [455] \"\"                                                                                    #> [456] \"Use a similar syntax as `select()` to move blocks of columns at once\"                #> [457] \"\"                                                                                    #> [458] \"::: {#cb17 .sourceCode}\"                                                             #> [459] \"``` {.sourceCode .r}\"                                                                #> [460] \"starwars %>% relocate(sex:homeworld, .before = height)\"                              #> [461] \"#> # A tibble: 87 × 14\"                                                              #> [462] \"#>   name       sex   gender homeworld height  mass hair_color skin_color eye_color\" #> [463] \"#>   <chr>      <chr> <chr>  <chr>      <int> <dbl> <chr>      <chr>      <chr>    \" #> [464] \"#> 1 Luke Skyw… male  mascu… Tatooine     172    77 blond      fair       blue     \" #> [465] \"#> 2 C-3PO      none  mascu… Tatooine     167    75 <NA>       gold       yellow   \" #> [466] \"#> 3 R2-D2      none  mascu… Naboo         96    32 <NA>       white, bl… red      \" #> [467] \"#> 4 Darth Vad… male  mascu… Tatooine     202   136 none       white      yellow   \" #> [468] \"#> # ℹ 83 more rows\"                                                                 #> [469] \"#> # ℹ 5 more variables: birth_year <dbl>, species <chr>, films <list>,\"             #> [470] \"#> #   vehicles <list>, starships <list>\"                                            #> [471] \"```\"                                                                                 #> [472] \":::\"                                                                                 #> [473] \":::\"                                                                                 #> [474] \"\"                                                                                    #> [475] \"::: {#summarise-values-with-summarise .section .level3}\"                             #> [476] \"### Summarise values with `summarise()`\"                                             #> [477] \"\"                                                                                    #> [478] \"The last verb is `summarise()`. It collapses a data frame to a single\"               #> [479] \"row.\"                                                                                #> [480] \"\"                                                                                    #> [481] \"::: {#cb18 .sourceCode}\"                                                             #> [482] \"``` {.sourceCode .r}\"                                                                #> [483] \"starwars %>% summarise(height = mean(height, na.rm = TRUE))\"                         #> [484] \"#> # A tibble: 1 × 1\"                                                                #> [485] \"#>   height\"                                                                         #> [486] \"#>    <dbl>\"                                                                         #> [487] \"#> 1   175.\"                                                                         #> [488] \"```\"                                                                                 #> [489] \":::\"                                                                                 #> [490] \"\"                                                                                    #> [491] \"It's not that useful until we learn the `group_by()` verb below.\"                    #> [492] \":::\"                                                                                 #> [493] \"\"                                                                                    #> [494] \"::: {#commonalities .section .level3}\"                                               #> [495] \"### Commonalities\"                                                                   #> [496] \"\"                                                                                    #> [497] \"You may have noticed that the syntax and function of all these verbs are\"            #> [498] \"very similar:\"                                                                       #> [499] \"\"                                                                                    #> [500] \"-   The first argument is a data frame.\"                                             #> [501] \"\"                                                                                    #> [502] \"-   The subsequent arguments describe what to do with the data frame.\"               #> [503] \"    You can refer to columns in the data frame directly without using\"               #> [504] \"    `$`.\"                                                                            #> [505] \"\"                                                                                    #> [506] \"-   The result is a new data frame\"                                                  #> [507] \"\"                                                                                    #> [508] \"Together these properties make it easy to chain together multiple simple\"            #> [509] \"steps to achieve a complex result.\"                                                  #> [510] \"\"                                                                                    #> [511] \"These five functions provide the basis of a language of data\"                        #> [512] \"manipulation. At the most basic level, you can only alter a tidy data\"               #> [513] \"frame in five useful ways: you can reorder the rows (`arrange()`), pick\"             #> [514] \"observations and variables of interest (`filter()` and `select()`), add\"             #> [515] \"new variables that are functions of existing variables (`mutate()`), or\"             #> [516] \"collapse many values to a summary (`summarise()`).\"                                  #> [517] \":::\"                                                                                 #> [518] \":::\"                                                                                 #> [519] \"\"                                                                                    #> [520] \"::: {#combining-functions-with .section .level2}\"                                    #> [521] \"## Combining functions with `%>%`\"                                                   #> [522] \"\"                                                                                    #> [523] \"The dplyr API is functional in the sense that function calls don't have\"             #> [524] \"side-effects. You must always save their results. This doesn't lead to\"              #> [525] \"particularly elegant code, especially if you want to do many operations\"             #> [526] \"at once. You either have to do it step-by-step:\"                                     #> [527] \"\"                                                                                    #> [528] \"::: {#cb19 .sourceCode}\"                                                             #> [529] \"``` {.sourceCode .r}\"                                                                #> [530] \"a1 <- group_by(starwars, species, sex)\"                                              #> [531] \"a2 <- select(a1, height, mass)\"                                                      #> [532] \"a3 <- summarise(a2,\"                                                                 #> [533] \"  height = mean(height, na.rm = TRUE),\"                                              #> [534] \"  mass = mean(mass, na.rm = TRUE)\"                                                   #> [535] \")\"                                                                                   #> [536] \"```\"                                                                                 #> [537] \":::\"                                                                                 #> [538] \"\"                                                                                    #> [539] \"Or if you don't want to name the intermediate results, you need to wrap\"             #> [540] \"the function calls inside each other:\"                                               #> [541] \"\"                                                                                    #> [542] \"::: {#cb20 .sourceCode}\"                                                             #> [543] \"``` {.sourceCode .r}\"                                                                #> [544] \"summarise(\"                                                                          #> [545] \"  select(\"                                                                           #> [546] \"    group_by(starwars, species, sex),\"                                               #> [547] \"    height, mass\"                                                                    #> [548] \"  ),\"                                                                                #> [549] \"  height = mean(height, na.rm = TRUE),\"                                              #> [550] \"  mass = mean(mass, na.rm = TRUE)\"                                                   #> [551] \")\"                                                                                   #> [552] \"#> Adding missing grouping variables: `species`, `sex`\"                              #> [553] \"#> `summarise()` has grouped output by 'species'. You can override using the\"        #> [554] \"#> `.groups` argument.\"                                                              #> [555] \"#> # A tibble: 41 × 4\"                                                               #> [556] \"#> # Groups:   species [38]\"                                                         #> [557] \"#>   species  sex   height  mass\"                                                    #> [558] \"#>   <chr>    <chr>  <dbl> <dbl>\"                                                    #> [559] \"#> 1 Aleena   male      79    15\"                                                    #> [560] \"#> 2 Besalisk male     198   102\"                                                    #> [561] \"#> 3 Cerean   male     198    82\"                                                    #> [562] \"#> 4 Chagrian male     196   NaN\"                                                    #> [563] \"#> # ℹ 37 more rows\"                                                                 #> [564] \"```\"                                                                                 #> [565] \":::\"                                                                                 #> [566] \"\"                                                                                    #> [567] \"This is difficult to read because the order of the operations is from\"               #> [568] \"inside to out. Thus, the arguments are a long way away from the\"                     #> [569] \"function. To get around this problem, dplyr provides the `%>%` operator\"             #> [570] \"from magrittr. `x %>% f(y)` turns into `f(x, y)` so you can use it to\"               #> [571] \"rewrite multiple operations that you can read left-to-right,\"                        #> [572] \"top-to-bottom (reading the pipe operator as \\\"then\\\"):\"                              #> [573] \"\"                                                                                    #> [574] \"::: {#cb21 .sourceCode}\"                                                             #> [575] \"``` {.sourceCode .r}\"                                                                #> [576] \"starwars %>%\"                                                                        #> [577] \"  group_by(species, sex) %>%\"                                                        #> [578] \"  select(height, mass) %>%\"                                                          #> [579] \"  summarise(\"                                                                        #> [580] \"    height = mean(height, na.rm = TRUE),\"                                            #> [581] \"    mass = mean(mass, na.rm = TRUE)\"                                                 #> [582] \"  )\"                                                                                 #> [583] \"```\"                                                                                 #> [584] \":::\"                                                                                 #> [585] \":::\"                                                                                 #> [586] \"\"                                                                                    #> [587] \"::: {#patterns-of-operations .section .level2}\"                                      #> [588] \"## Patterns of operations\"                                                           #> [589] \"\"                                                                                    #> [590] \"The dplyr verbs can be classified by the type of operations they\"                    #> [591] \"accomplish (we sometimes speak of their **semantics**, i.e., their\"                  #> [592] \"meaning). It's helpful to have a good grasp of the difference between\"               #> [593] \"select and mutate operations.\"                                                       #> [594] \"\"                                                                                    #> [595] \"::: {#selecting-operations .section .level3}\"                                        #> [596] \"### Selecting operations\"                                                            #> [597] \"\"                                                                                    #> [598] \"One of the appealing features of dplyr is that you can refer to columns\"             #> [599] \"from the tibble as if they were regular variables. However, the\"                     #> [600] \"syntactic uniformity of referring to bare column names hides semantical\"             #> [601] \"differences across the verbs. A column symbol supplied to `select()`\"                #> [602] \"does not have the same meaning as the same symbol supplied to\"                       #> [603] \"`mutate()`.\"                                                                         #> [604] \"\"                                                                                    #> [605] \"Selecting operations expect column names and positions. Hence, when you\"             #> [606] \"call `select()` with bare variable names, they actually represent their\"             #> [607] \"own positions in the tibble. The following calls are completely\"                     #> [608] \"equivalent from dplyr's point of view:\"                                              #> [609] \"\"                                                                                    #> [610] \"::: {#cb22 .sourceCode}\"                                                             #> [611] \"``` {.sourceCode .r}\"                                                                #> [612] \"# `name` represents the integer 1\"                                                   #> [613] \"select(starwars, name)\"                                                              #> [614] \"#> # A tibble: 87 × 1\"                                                               #> [615] \"#>   name          \"                                                                 #> [616] \"#>   <chr>         \"                                                                 #> [617] \"#> 1 Luke Skywalker\"                                                                 #> [618] \"#> 2 C-3PO         \"                                                                 #> [619] \"#> 3 R2-D2         \"                                                                 #> [620] \"#> 4 Darth Vader   \"                                                                 #> [621] \"#> # ℹ 83 more rows\"                                                                 #> [622] \"select(starwars, 1)\"                                                                 #> [623] \"#> # A tibble: 87 × 1\"                                                               #> [624] \"#>   name          \"                                                                 #> [625] \"#>   <chr>         \"                                                                 #> [626] \"#> 1 Luke Skywalker\"                                                                 #> [627] \"#> 2 C-3PO         \"                                                                 #> [628] \"#> 3 R2-D2         \"                                                                 #> [629] \"#> 4 Darth Vader   \"                                                                 #> [630] \"#> # ℹ 83 more rows\"                                                                 #> [631] \"```\"                                                                                 #> [632] \":::\"                                                                                 #> [633] \"\"                                                                                    #> [634] \"By the same token, this means that you cannot refer to variables from\"               #> [635] \"the surrounding context if they have the same name as one of the\"                    #> [636] \"columns. In the following example, `height` still represents 2, not 5:\"              #> [637] \"\"                                                                                    #> [638] \"::: {#cb23 .sourceCode}\"                                                             #> [639] \"``` {.sourceCode .r}\"                                                                #> [640] \"height <- 5\"                                                                         #> [641] \"select(starwars, height)\"                                                            #> [642] \"#> # A tibble: 87 × 1\"                                                               #> [643] \"#>   height\"                                                                         #> [644] \"#>    <int>\"                                                                         #> [645] \"#> 1    172\"                                                                         #> [646] \"#> 2    167\"                                                                         #> [647] \"#> 3     96\"                                                                         #> [648] \"#> 4    202\"                                                                         #> [649] \"#> # ℹ 83 more rows\"                                                                 #> [650] \"```\"                                                                                 #> [651] \":::\"                                                                                 #> [652] \"\"                                                                                    #> [653] \"One useful subtlety is that this only applies to bare names and to\"                  #> [654] \"selecting calls like `c(height, mass)` or `height:mass`. In all other\"               #> [655] \"cases, the columns of the data frame are not put in scope. This allows\"              #> [656] \"you to refer to contextual variables in selection helpers:\"                          #> [657] \"\"                                                                                    #> [658] \"::: {#cb24 .sourceCode}\"                                                             #> [659] \"``` {.sourceCode .r}\"                                                                #> [660] \"name <- \\\"color\\\"\"                                                                   #> [661] \"select(starwars, ends_with(name))\"                                                   #> [662] \"#> # A tibble: 87 × 3\"                                                               #> [663] \"#>   hair_color skin_color  eye_color\"                                               #> [664] \"#>   <chr>      <chr>       <chr>    \"                                               #> [665] \"#> 1 blond      fair        blue     \"                                               #> [666] \"#> 2 <NA>       gold        yellow   \"                                               #> [667] \"#> 3 <NA>       white, blue red      \"                                               #> [668] \"#> 4 none       white       yellow   \"                                               #> [669] \"#> # ℹ 83 more rows\"                                                                 #> [670] \"```\"                                                                                 #> [671] \":::\"                                                                                 #> [672] \"\"                                                                                    #> [673] \"These semantics are usually intuitive. But note the subtle difference:\"              #> [674] \"\"                                                                                    #> [675] \"::: {#cb25 .sourceCode}\"                                                             #> [676] \"``` {.sourceCode .r}\"                                                                #> [677] \"name <- 5\"                                                                           #> [678] \"select(starwars, name, identity(name))\"                                              #> [679] \"#> # A tibble: 87 × 2\"                                                               #> [680] \"#>   name           skin_color \"                                                     #> [681] \"#>   <chr>          <chr>      \"                                                     #> [682] \"#> 1 Luke Skywalker fair       \"                                                     #> [683] \"#> 2 C-3PO          gold       \"                                                     #> [684] \"#> 3 R2-D2          white, blue\"                                                     #> [685] \"#> 4 Darth Vader    white      \"                                                     #> [686] \"#> # ℹ 83 more rows\"                                                                 #> [687] \"```\"                                                                                 #> [688] \":::\"                                                                                 #> [689] \"\"                                                                                    #> [690] \"In the first argument, `name` represents its own position `1`. In the\"               #> [691] \"second argument, `name` is evaluated in the surrounding context and\"                 #> [692] \"represents the fifth column.\"                                                        #> [693] \"\"                                                                                    #> [694] \"For a long time, `select()` used to only understand column positions.\"               #> [695] \"Counting from dplyr 0.6, it now understands column names as well. This\"              #> [696] \"makes it a bit easier to program with `select()`:\"                                   #> [697] \"\"                                                                                    #> [698] \"::: {#cb26 .sourceCode}\"                                                             #> [699] \"``` {.sourceCode .r}\"                                                                #> [700] \"vars <- c(\\\"name\\\", \\\"height\\\")\"                                                     #> [701] \"select(starwars, all_of(vars), \\\"mass\\\")\"                                            #> [702] \"#> # A tibble: 87 × 3\"                                                               #> [703] \"#>   name           height  mass\"                                                    #> [704] \"#>   <chr>           <int> <dbl>\"                                                    #> [705] \"#> 1 Luke Skywalker    172    77\"                                                    #> [706] \"#> 2 C-3PO             167    75\"                                                    #> [707] \"#> 3 R2-D2              96    32\"                                                    #> [708] \"#> 4 Darth Vader       202   136\"                                                    #> [709] \"#> # ℹ 83 more rows\"                                                                 #> [710] \"```\"                                                                                 #> [711] \":::\"                                                                                 #> [712] \":::\"                                                                                 #> [713] \"\"                                                                                    #> [714] \"::: {#mutating-operations .section .level3}\"                                         #> [715] \"### Mutating operations\"                                                             #> [716] \"\"                                                                                    #> [717] \"Mutate semantics are quite different from selection semantics. Whereas\"              #> [718] \"`select()` expects column names or positions, `mutate()` expects *column\"            #> [719] \"vectors*. We will set up a smaller tibble to use for our examples.\"                  #> [720] \"\"                                                                                    #> [721] \"::: {#cb27 .sourceCode}\"                                                             #> [722] \"``` {.sourceCode .r}\"                                                                #> [723] \"df <- starwars %>% select(name, height, mass)\"                                       #> [724] \"```\"                                                                                 #> [725] \":::\"                                                                                 #> [726] \"\"                                                                                    #> [727] \"When we use `select()`, the bare column names stand for their own\"                   #> [728] \"positions in the tibble. For `mutate()` on the other hand, column\"                   #> [729] \"symbols represent the actual column vectors stored in the tibble.\"                   #> [730] \"Consider what happens if we give a string or a number to `mutate()`:\"                #> [731] \"\"                                                                                    #> [732] \"::: {#cb28 .sourceCode}\"                                                             #> [733] \"``` {.sourceCode .r}\"                                                                #> [734] \"mutate(df, \\\"height\\\", 2)\"                                                           #> [735] \"#> # A tibble: 87 × 5\"                                                               #> [736] \"#>   name           height  mass `\\\"height\\\"`   `2`\"                                 #> [737] \"#>   <chr>           <int> <dbl> <chr>      <dbl>\"                                   #> [738] \"#> 1 Luke Skywalker    172    77 height         2\"                                   #> [739] \"#> 2 C-3PO             167    75 height         2\"                                   #> [740] \"#> 3 R2-D2              96    32 height         2\"                                   #> [741] \"#> 4 Darth Vader       202   136 height         2\"                                   #> [742] \"#> # ℹ 83 more rows\"                                                                 #> [743] \"```\"                                                                                 #> [744] \":::\"                                                                                 #> [745] \"\"                                                                                    #> [746] \"`mutate()` gets length-1 vectors that it interprets as new columns in\"               #> [747] \"the data frame. These vectors are recycled so they match the number of\"              #> [748] \"rows. That's why it doesn't make sense to supply expressions like\"                   #> [749] \"`\\\"height\\\" + 10` to `mutate()`. This amounts to adding 10 to a string!\"             #> [750] \"The correct expression is:\"                                                          #> [751] \"\"                                                                                    #> [752] \"::: {#cb29 .sourceCode}\"                                                             #> [753] \"``` {.sourceCode .r}\"                                                                #> [754] \"mutate(df, height + 10)\"                                                             #> [755] \"#> # A tibble: 87 × 4\"                                                               #> [756] \"#>   name           height  mass `height + 10`\"                                      #> [757] \"#>   <chr>           <int> <dbl>         <dbl>\"                                      #> [758] \"#> 1 Luke Skywalker    172    77           182\"                                      #> [759] \"#> 2 C-3PO             167    75           177\"                                      #> [760] \"#> 3 R2-D2              96    32           106\"                                      #> [761] \"#> 4 Darth Vader       202   136           212\"                                      #> [762] \"#> # ℹ 83 more rows\"                                                                 #> [763] \"```\"                                                                                 #> [764] \":::\"                                                                                 #> [765] \"\"                                                                                    #> [766] \"In the same way, you can unquote values from the context if these values\"            #> [767] \"represent a valid column. They must be either length 1 (they then get\"               #> [768] \"recycled) or have the same length as the number of rows. In the\"                     #> [769] \"following example we create a new vector that we add to the data frame:\"             #> [770] \"\"                                                                                    #> [771] \"::: {#cb30 .sourceCode}\"                                                             #> [772] \"``` {.sourceCode .r}\"                                                                #> [773] \"var <- seq(1, nrow(df))\"                                                             #> [774] \"mutate(df, new = var)\"                                                               #> [775] \"#> # A tibble: 87 × 4\"                                                               #> [776] \"#>   name           height  mass   new\"                                              #> [777] \"#>   <chr>           <int> <dbl> <int>\"                                              #> [778] \"#> 1 Luke Skywalker    172    77     1\"                                              #> [779] \"#> 2 C-3PO             167    75     2\"                                              #> [780] \"#> 3 R2-D2              96    32     3\"                                              #> [781] \"#> 4 Darth Vader       202   136     4\"                                              #> [782] \"#> # ℹ 83 more rows\"                                                                 #> [783] \"```\"                                                                                 #> [784] \":::\"                                                                                 #> [785] \"\"                                                                                    #> [786] \"A case in point is `group_by()`. While you might think it has select\"                #> [787] \"semantics, it actually has mutate semantics. This is quite handy as it\"              #> [788] \"allows to group by a modified column:\"                                               #> [789] \"\"                                                                                    #> [790] \"::: {#cb31 .sourceCode}\"                                                             #> [791] \"``` {.sourceCode .r}\"                                                                #> [792] \"group_by(starwars, sex)\"                                                             #> [793] \"#> # A tibble: 87 × 14\"                                                              #> [794] \"#> # Groups:   sex [5]\"                                                              #> [795] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [796] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [797] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #> [798] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #> [799] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #> [800] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #> [801] \"#> # ℹ 83 more rows\"                                                                 #> [802] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [803] \"#> #   vehicles <list>, starships <list>\"                                            #> [804] \"group_by(starwars, sex = as.factor(sex))\"                                            #> [805] \"#> # A tibble: 87 × 14\"                                                              #> [806] \"#> # Groups:   sex [5]\"                                                              #> [807] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [808] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <fct> <chr> \" #> [809] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #> [810] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #> [811] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #> [812] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #> [813] \"#> # ℹ 83 more rows\"                                                                 #> [814] \"#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [815] \"#> #   vehicles <list>, starships <list>\"                                            #> [816] \"group_by(starwars, height_binned = cut(height, 3))\"                                  #> [817] \"#> # A tibble: 87 × 15\"                                                              #> [818] \"#> # Groups:   height_binned [4]\"                                                    #> [819] \"#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\" #> [820] \"#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \" #> [821] \"#> 1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\" #> [822] \"#> 2 C-3PO        167    75 <NA>       gold       yellow         112   none  mascu…\" #> [823] \"#> 3 R2-D2         96    32 <NA>       white, bl… red             33   none  mascu…\" #> [824] \"#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\" #> [825] \"#> # ℹ 83 more rows\"                                                                 #> [826] \"#> # ℹ 6 more variables: homeworld <chr>, species <chr>, films <list>,\"              #> [827] \"#> #   vehicles <list>, starships <list>, height_binned <fct>\"                       #> [828] \"```\"                                                                                 #> [829] \":::\"                                                                                 #> [830] \"\"                                                                                    #> [831] \"This is why you can't supply a column name to `group_by()`. This amounts\"            #> [832] \"to creating a new column containing the string recycled to the number of\"            #> [833] \"rows:\"                                                                               #> [834] \"\"                                                                                    #> [835] \"::: {#cb32 .sourceCode}\"                                                             #> [836] \"``` {.sourceCode .r}\"                                                                #> [837] \"group_by(df, \\\"month\\\")\"                                                             #> [838] \"#> # A tibble: 87 × 4\"                                                               #> [839] \"#> # Groups:   \\\"month\\\" [1]\"                                                        #> [840] \"#>   name           height  mass `\\\"month\\\"`\"                                        #> [841] \"#>   <chr>           <int> <dbl> <chr>    \"                                          #> [842] \"#> 1 Luke Skywalker    172    77 month    \"                                          #> [843] \"#> 2 C-3PO             167    75 month    \"                                          #> [844] \"#> 3 R2-D2              96    32 month    \"                                          #> [845] \"#> 4 Darth Vader       202   136 month    \"                                          #> [846] \"#> # ℹ 83 more rows\"                                                                 #> [847] \"```\"                                                                                 #> [848] \":::\"                                                                                 #> [849] \":::\"                                                                                 #> [850] \":::\"                                                                                  # Files ---- btw_this(\"./\") # list files in the current working directory #> [1] \"| path | type | size | modification_time |\\n|------|------|------|-------------------|\\n| btw-package.html | file |  6.2K | 2025-03-28 17:51:36 |\\n| btw.html | file | 13.66K | 2025-03-28 17:51:37 |\\n| btw_client.html | file | 18.32K | 2025-03-28 17:51:38 |\\n| btw_register_tools.html | file | 11.16K | 2025-03-28 17:51:38 |\\n| index.html | file |  7.44K | 2025-03-28 17:51:36 |\""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Describe data frame — btw_tool_describe_data_frame","title":"Tool: Describe data frame — btw_tool_describe_data_frame","text":"Tool: Describe data frame","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Describe data frame — btw_tool_describe_data_frame","text":"","code":"btw_tool_describe_data_frame(   data_frame,   format = c(\"skim\", \"glimpse\", \"print\", \"json\"),   dims = c(5, 100) )"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Describe data frame — btw_tool_describe_data_frame","text":"data_frame data frame describe format One \"skim\", \"glimpse\", \"print\", \"json\". \"skim\" information-dense format describing data. uses returns information skimr::skim() formatting JSON object describes dataset. glimpse data column--column, use \"glimpse\". particularly helpful getting sense data frame column names, types, distributions, pairings entries individual rows particularly important. just print data frame, use print(). get json representation data, use \"json\". particularly helpful pairings among entries specific rows important demonstrate. dims number rows columns show, numeric vector length two. example, default dims = c(5, 100) shows first 5 rows 100 columns, whereas dims = c(Inf, Inf) show data.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Describe data frame — btw_tool_describe_data_frame","text":"character vector containing representation data frame. error named data frame found environment.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool: Describe data frame — btw_tool_describe_data_frame","text":"","code":"btw_tool_describe_data_frame(mtcars) #> [1] \"```json{\\\"n_cols\\\":11,\\\"n_rows\\\":32,\\\"groups\\\":[],\\\"class\\\":\\\"data.frame\\\",\\\"columns\\\":{\\\"mpg\\\":{\\\"variable\\\":\\\"mpg\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":20.0906,\\\"sd\\\":6.0269,\\\"p0\\\":10.4,\\\"p25\\\":15.425,\\\"p50\\\":19.2,\\\"p75\\\":22.8,\\\"p100\\\":33.9},\\\"cyl\\\":{\\\"variable\\\":\\\"cyl\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":6.1875,\\\"sd\\\":1.7859,\\\"p0\\\":4,\\\"p25\\\":4,\\\"p50\\\":6,\\\"p75\\\":8,\\\"p100\\\":8},\\\"disp\\\":{\\\"variable\\\":\\\"disp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":230.7219,\\\"sd\\\":123.9387,\\\"p0\\\":71.1,\\\"p25\\\":120.825,\\\"p50\\\":196.3,\\\"p75\\\":326,\\\"p100\\\":472},\\\"hp\\\":{\\\"variable\\\":\\\"hp\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":146.6875,\\\"sd\\\":68.5629,\\\"p0\\\":52,\\\"p25\\\":96.5,\\\"p50\\\":123,\\\"p75\\\":180,\\\"p100\\\":335},\\\"drat\\\":{\\\"variable\\\":\\\"drat\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.5966,\\\"sd\\\":0.5347,\\\"p0\\\":2.76,\\\"p25\\\":3.08,\\\"p50\\\":3.695,\\\"p75\\\":3.92,\\\"p100\\\":4.93},\\\"wt\\\":{\\\"variable\\\":\\\"wt\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.2172,\\\"sd\\\":0.9785,\\\"p0\\\":1.513,\\\"p25\\\":2.5812,\\\"p50\\\":3.325,\\\"p75\\\":3.61,\\\"p100\\\":5.424},\\\"qsec\\\":{\\\"variable\\\":\\\"qsec\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":17.8487,\\\"sd\\\":1.7869,\\\"p0\\\":14.5,\\\"p25\\\":16.8925,\\\"p50\\\":17.71,\\\"p75\\\":18.9,\\\"p100\\\":22.9},\\\"vs\\\":{\\\"variable\\\":\\\"vs\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4375,\\\"sd\\\":0.504,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"am\\\":{\\\"variable\\\":\\\"am\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":0.4062,\\\"sd\\\":0.499,\\\"p0\\\":0,\\\"p25\\\":0,\\\"p50\\\":0,\\\"p75\\\":1,\\\"p100\\\":1},\\\"gear\\\":{\\\"variable\\\":\\\"gear\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":3.6875,\\\"sd\\\":0.7378,\\\"p0\\\":3,\\\"p25\\\":3,\\\"p50\\\":4,\\\"p75\\\":4,\\\"p100\\\":5},\\\"carb\\\":{\\\"variable\\\":\\\"carb\\\",\\\"type\\\":\\\"numeric\\\",\\\"mean\\\":2.8125,\\\"sd\\\":1.6152,\\\"p0\\\":1,\\\"p25\\\":2,\\\"p50\\\":2,\\\"p75\\\":4,\\\"p100\\\":8}}}\" #> [3] \"```\""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Describe an environment — btw_tool_describe_environment","title":"Tool: Describe an environment — btw_tool_describe_environment","text":"Tool: Describe environment","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Describe an environment — btw_tool_describe_environment","text":"","code":"btw_tool_describe_environment(environment = global_env(), items = NULL)"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Describe an environment — btw_tool_describe_environment","text":"environment environment describe. items Optional. character vector objects environment describe.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_describe_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Describe an environment — btw_tool_describe_environment","text":"string describing environment contents #> prefixing object's printed representation.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: List files — btw_tool_list_files","title":"Tool: List files — btw_tool_list_files","text":"Tool: List files","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: List files — btw_tool_list_files","text":"","code":"btw_tool_list_files(   path = getwd(),   type = c(\"any\", \"file\", \"directory\"),   regexp = \"\" )"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: List files — btw_tool_list_files","text":"path Path directory file get information. path must current working directory. path directory, use fs::dir_info() list information files directories path (use type pick one ). path file, show information file. type File type(s) return, one \"\" \"file\" \"directory\". regexp regular expression (e.g. [.]csv$) passed grep() filter paths.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_list_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: List files — btw_tool_list_files","text":"Returns character table file information.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_package_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Describe R package documentation — btw_tool_package_docs","title":"Tool: Describe R package documentation — btw_tool_package_docs","text":"functions describe package documentation plain text:","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_package_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Describe R package documentation — btw_tool_package_docs","text":"","code":"btw_tool_get_package_help_topics(package_name)  btw_tool_get_help_page(topic, package_name = \"\")  btw_tool_get_available_vignettes_in_package(package_name)  btw_tool_get_vignette_from_package(package_name, vignette = package_name)"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_package_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Describe R package documentation — btw_tool_package_docs","text":"package_name name package string, e.g. \"shiny\". topic topic_id alias help page, e.g. \"withProgress\" \"incProgress\". Find topic_ids aliases using get_package_help(). vignette name (index) vignette retrieve. Defaults \"intro\" vignette package (rules pkgdown.)","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_package_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Describe R package documentation — btw_tool_package_docs","text":"btw_tool_get_package_help_topics() returns topic_id, title, aliases fields every topic package's documentation json-formatted string. btw_tool_get_help_page() return help-page package topic string.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_package_docs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool: Describe R package documentation — btw_tool_package_docs","text":"","code":"cat(btw_tool_get_package_help_topics(\"btw\")) #> ```json [ #>   {\"topic_id\":\"btw\",\"title\":\"Plain-text descriptions of R objects\",\"aliases\":[\"btw\"]}, #>   {\"topic_id\":\"btw-package\",\"title\":\"btw: Describe R Stuff to Large Language Models\",\"aliases\":[\"btw-package\"]}, #>   {\"topic_id\":\"btw_client\",\"title\":\"Create a btw-enhanced ellmer chat client\",\"aliases\":[\"btw_client\",\"btw_app\"]}, #>   {\"topic_id\":\"btw_register_tools\",\"title\":\"Tools: Register tools from btw\",\"aliases\":[\"btw_register_tools\"]}, #>   {\"topic_id\":\"btw_this\",\"title\":\"Describe something for use by an LLM\",\"aliases\":[\"btw_this\"]}, #>   {\"topic_id\":\"btw_this.character\",\"title\":\"Describe objects\",\"aliases\":[\"btw_this.character\"]}, #>   {\"topic_id\":\"btw_this.data.frame\",\"title\":\"Describe a data frame in plain text\",\"aliases\":[\"btw_this.data.frame\",\"btw_this.tbl\"]}, #>   {\"topic_id\":\"btw_this.environment\",\"title\":\"Describe the contents of an environment\",\"aliases\":[\"btw_this.environment\"]}, #>   {\"topic_id\":\"btw_tool_describe_data_frame\",\"title\":\"Tool: Describe data frame\",\"aliases\":[\"btw_tool_describe_data_frame\"]}, #>   {\"topic_id\":\"btw_tool_describe_environment\",\"title\":\"Tool: Describe an environment\",\"aliases\":[\"btw_tool_describe_environment\"]}, #>   {\"topic_id\":\"btw_tool_list_files\",\"title\":\"Tool: List files\",\"aliases\":[\"btw_tool_list_files\"]}, #>   {\"topic_id\":\"btw_tool_package_docs\",\"title\":\"Tool: Describe R package documentation\",\"aliases\":[\"btw_tool_package_docs\",\"btw_tool_get_package_help_topics\",\"btw_tool_get_help_page\",\"btw_tool_get_available_vignettes_in_package\",\"btw_tool_get_vignette_from_package\"]}, #>   {\"topic_id\":\"btw_tool_read_current_editor\",\"title\":\"Tool: Read current file\",\"aliases\":[\"btw_tool_read_current_editor\"]}, #>   {\"topic_id\":\"btw_tool_read_text_file\",\"title\":\"Tool: Read a file\",\"aliases\":[\"btw_tool_read_text_file\"]}, #>   {\"topic_id\":\"btw_tool_session_package_info\",\"title\":\"Tool: Gather information about a package or currently loaded packages\",\"aliases\":[\"btw_tool_session_package_info\"]}, #>   {\"topic_id\":\"btw_tool_session_platform_info\",\"title\":\"Tool: Describe user's platform\",\"aliases\":[\"btw_tool_session_platform_info\"]} #> ] ```  cat(btw_tool_get_help_page(\"btw\", \"btw\")) #> btw                    package:btw                     R Documentation  Plain-text descriptions of R objects  Description:       This function allows you to quickly describe your computational      environment to a model by concatenating plain-text descriptions of      \"R stuff\", from data frames to packages to function documentation.       There are two key ways to use ‘btw()’:         1. Use it interactively at the console to gather information           about your environment into prompt text that you can paste           into the chat interface of an LLM, like ChatGPT or Claude. By           default, ‘btw()’ copies the prompt to the clipboard for you.            btw(vignette(\"colwise\", \"dplyr\"), dplyr::across, dplyr::starwars)           #> ✔ btw copied to the clipboard!                   2. Pair ‘btw()’ with ellmer::Chat during a chat session to           create a prompt that includes additional context drawn from           your environment and help pages.            library(ellmer)                      chat <- chat_claude() # requires an Anthropic API key           chat <- chat_ollama(model = \"llama3.1:8b\") # requires ollama and a local model                      chat$chat(btw(             vignette(\"colwise\", \"dplyr\"),             dplyr::across,             dplyr::starwars,             \"Create a few interesting examples that use `dplyr::across()`\",             \"with the `starwars` data set.\"           ))            Usage:       btw(..., clipboard = TRUE)       Arguments:       ...: Objects to describe from your R environment. You can pass           objects themselves, like data frames or functions, or the           function also accepts output from btw_tool_*() functions like           ‘btw_tool_get_package_help_topics()’,           ‘btw_tool_get_help_page()’, etc. If omitted, this function           will just describe the elements in your global R environment.  clipboard: Whether to write the results to the clipboard. A single           logical value; will default to ‘TRUE’ when run interactively.  Value:       Returns an ellmer::ContentText object with the collected prompt.      If ‘clipboard = TRUE’, the prompt text is copied to the clipboard      when the returned object is printed for the first time (e.g.      calling ‘btw()’ without assignment).  Examples:       btw()            btw(mtcars)            btw(btw::btw)            if (FALSE) {        # btw() can also be used directly in {ellmer} chats        library(ellmer)              chat <- chat_ollama(model = \"llama3.1:8b\")        chat$chat(          btw(mtcars, \"Are there cars with 8 cylinders in this dataset?\")        )      }        # show the TOC of vignettes in the dplyr package cat(btw_tool_get_available_vignettes_in_package(\"dplyr\")) #> [   {\"vignette\":\"colwise\",\"title\":\"Column-wise operations\"},   {\"vignette\":\"grouping\",\"title\":\"Grouped data\"},   {\"vignette\":\"dplyr\",\"title\":\"Introduction to dplyr\"},   {\"vignette\":\"programming\",\"title\":\"Programming with dplyr\"},   {\"vignette\":\"rowwise\",\"title\":\"Row-wise operations\"},   {\"vignette\":\"two-table\",\"title\":\"Two-table verbs\"},   {\"vignette\":\"in-packages\",\"title\":\"Using dplyr in packages\"},   {\"vignette\":\"window-functions\",\"title\":\"Window functions\"},   {\"vignette\":\"base\",\"title\":\"dplyr <-> base R\"} ]  # returns a whole bunch of output and relies on # dplyr to have the mentioned vignettes available if (FALSE) { # \\dontrun{ # grab the intro vignette cat(btw_tool_get_vignette_from_package(\"dplyr\"))  # grab the programming vignette specifically cat(btw_tool_get_vignette_from_package(\"dplyr\", \"programming\")) } # }"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_current_editor.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Read current file — btw_tool_read_current_editor","title":"Tool: Read current file — btw_tool_read_current_editor","text":"Reads current file using rstudioapi, works RStudio, Positron VS Code (vscode-r extension).","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_current_editor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Read current file — btw_tool_read_current_editor","text":"","code":"btw_tool_read_current_editor(selection = TRUE, consent = FALSE)"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_current_editor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Read current file — btw_tool_read_current_editor","text":"selection selected text included? text selected, full file contents returned. consent Boolean indicating whether user consented reading current file. tool definition includes language induce LLMs confirm user calling tool. models follow instructions. Users can also include string @current_file induce tool.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_current_editor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Read current file — btw_tool_read_current_editor","text":"Returns contents current editor.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_text_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Read a file — btw_tool_read_text_file","title":"Tool: Read a file — btw_tool_read_text_file","text":"Tool: Read file","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_text_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Read a file — btw_tool_read_text_file","text":"","code":"btw_tool_read_text_file(path, max_lines = 1000)"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_text_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Read a file — btw_tool_read_text_file","text":"path Path file get information. path must current working directory. max_lines Number lines include. Defaults 1,000 lines.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_read_text_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Read a file — btw_tool_read_text_file","text":"Returns character vector lines file.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_package_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","title":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","text":"Uses sessioninfo::package_info() provide information loaded, attached, installed packages. primary use case verify package installed; check version number specific packages; determine packages already use session.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_package_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","text":"","code":"btw_tool_session_package_info(packages = \"attached\", dependencies = \"\")"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_package_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","text":"packages packages show, \"loaded\" show loaded packages, \"attached\" show attached packages, \"installed\" show installed packages. dependencies Whether include dependencies listing package information.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_package_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","text":"Returns string describing selected packages.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_package_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool: Gather information about a package or currently loaded packages — btw_tool_session_package_info","text":"","code":"cat(btw_tool_session_package_info(\"btw\")) #> ``` #>  package * version    date (UTC) lib source #>  btw     * 0.0.0.9001 2025-03-28 [1] local #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.4.3/lib/R/site-library #>  [3] /opt/R/4.4.3/lib/R/library #>  * ── Packages attached to the search path. #> ```"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_platform_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool: Describe user's platform — btw_tool_session_platform_info","title":"Tool: Describe user's platform — btw_tool_session_platform_info","text":"Describes R version, operating system, language locale settings user's system. using btw_client() btw_app(), information automatically included system prompt.","code":""},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_platform_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool: Describe user's platform — btw_tool_session_platform_info","text":"","code":"btw_tool_session_platform_info()"},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_platform_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tool: Describe user's platform — btw_tool_session_platform_info","text":"Returns string describing user's platform.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/btw/reference/btw_tool_session_platform_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool: Describe user's platform — btw_tool_session_platform_info","text":"","code":"cat(btw_tool_session_platform_info()) #> <system_info> #> R_VERSION: R version 4.4.3 (2025-02-28) #> OS: Ubuntu 24.04.2 LTS #> SYSTEM: x86_64, linux-gnu #> UI: X11 #> LANGUAGE: en #> LOCALE: C #> ENCODING: C.UTF-8 #> TIMEZONE: UTC #> DATE: Friday, March 28, 2025 (2025-03-28) #> <\/system_info>"}]
